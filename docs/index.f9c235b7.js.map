{"mappings":"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kB,EAAK,EAAM,EAGhD,EAIA,IAAA,EAAe,CACX,QApGY,CAAC,EAAK,EAAM,KACxB,IAAI,EAAM,CAAE,KAAA,EAAM,GAAA,CAAG,EAGrB,OAFA,AAAA,EAAgB,GAChB,AAAA,EAAkB,GACX,EAAY,EAAK,EAAI,IAAI,CAAE,EAAI,EAAE,CAC5C,EAgGI,UA9Fc,CAAC,EAAK,KACpB,IAAI,EAAM,CAAE,GAAA,CAAG,EAEf,GADA,AAAA,EAAgB,GACZ,AAAO,MAAP,SACA,AAAI,AAAA,EAAY,EAAI,EAAE,EACX,EAAiB,EAAK,AAAA,EAAe,EAAK,EAAI,MAAM,CAAG,GAAI,EAAI,EAAE,EAEjE,EAAkB,EAAK,AAAA,EAAe,EAAK,EAAI,MAAM,CAAG,GAAI,EAAI,EAAE,CACrF,EAuFI,EAAG,CACP,EG3GA,MAAM,EAAO,CAAC,CAGd;;;;;;AAMA,EACA,EAAK,SAAS,CAAG,CACb,QAAU,CACN,IAAM,YACN,IAAM,WACN,IAAM,YACN,IAAK,YACT,EAEA,OAAS,CACL,CAAC,IAAK,aAAc,CACpB,CAAC,IAAK,aAAc,CACpB,CAAC,IAAK,aAAc,CACpB,CAAC,IAAK,aAAc,CACvB,AACL,EAGA,6CAA6C;AAC7C,EAAK,SAAS,CAAG,CACb,YACA,YACA,aACA,QACA,WACA,cACA,WACA,eACA,UACA,WACA,aACA,WACA,QACA,UACA,WACA,gBACA,QACA,WACA,YACA,aACA,WACA,WACA,QACA,OACA,YACA,SACA,YACA,WACA,WACA,QACA,SACA,YACA,aACA,OACA,UACA,WACA,YACA,SACA,eACA,WACA,WACA,WACA,QACA,eACA,YACA,SACA,aACA,cACA,SACA,cACA,eACA,UACA,SACA,QACA,cACA,aACA,WACA,aACA,WACA,WACA,WACA,UACA,YACA,UACA,WACA,QACA,SACA,WACA,aACA,UACA,YACA,UACA,SACA,SACA,WACA,gBACA,aACA,UACA,YACA,QACA,QACA,QACA,aACA,YACA,UACA,UACA,WACA,SACA,UACA,YACA,WACA,QACA,UACA,YACA,WACA,UACA,QACA,YACA,YACA,SACH,CAED,EAAK,MAAM,CAAG,CACV,QACA,SACA,WACA,QACA,SACA,SACA,UACA,QACA,OACA,SACA,QACA,UACA,QACA,UACA,eACA,SACA,WACA,UACA,OACA,SACA,QACA,SACA,QACA,QACA,SACA,QACA,OACA,UACA,QACA,QACA,OACA,QACA,OACA,QACA,SACA,SACA,SACA,WACA,SACA,UACA,QACA,QACA,OACA,OACA,OACA,SACA,SACA,SACA,QACA,QACA,QACA,OACA,SACA,SACA,OACA,SACA,SACA,OACA,WACA,WACA,OACA,SACA,OACA,OACA,QACA,WACA,QACA,SACA,QACA,UACA,WACA,SACA,UACA,QACA,OACA,QACA,QACA,OACA,WACA,OACA,SACA,QACA,QACA,SACA,WACA,UACA,QACA,QACA,UACA,YACA,QACA,eACA,OACA,UACA,UACA,SACA,SACA,mBACA,QACA,OACH,CAED,EAAK,MAAM,CAAG,CACV,YACA,UACA,QACA,UACA,SACA,YACA,aACA,UACA,SACA,QACA,SACA,QACA,WACA,UACA,QACA,aACA,UACA,WACA,WACA,UACA,WACA,QACA,gBACA,QACA,UACA,QACA,aACA,WACA,UACA,cACA,iBACA,YACA,aACA,YACA,cACA,cACA,YACA,cACA,YACA,cACA,aACA,cACA,YACA,cACA,cACA,eACA,cACA,cACA,YACA,cACA,eACA,cACA,cACA,eACA,kBACA,cACA,cACA,cACA,cACA,UACA,UACA,UACA,WACA,YACA,YACA,aACA,SACA,WACA,UACA,YACA,aACA,SACA,UACA,SACA,YACA,YACA,YACA,YACA,SACA,WACA,WACA,WACA,UACA,UACA,UACA,YACA,WACA,YACA,UACA,WACA,WACA,cACA,SACA,aACA,UACA,WACA,UACA,wBACA,sBACA,mBACH,CAED,IAAI,EAAU,EAAK,SAAS,CAC5B,MAAM,EAAQ,EAAK,SAAS,CAAC,MAAM,CAqB7B,EAAkB,AAAC,IACrB,IAAI,EAAY,GAEhB,IAAK,IAAI,EAAE,EAAG,EAAI,EAAM,MAAM,CA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","sources":["<anon>","src/app.js","node_modules/anbani/src/anbani.mjs","node_modules/anbani/src/lib/core.mjs","node_modules/anbani/src/lib/data.mjs","node_modules/anbani/src/lib/utils.mjs","node_modules/anbani/src/lib/lorem.mjs","node_modules/anbani/src/lib/toolkit.mjs"],"sourcesContent":["var $d1f00b498fd37dc9$export$2e2bcd8739ae039 = {\n    alphabets: {\n        // Modern unicameral Georgian script developed in 10th century \n        // ან ბან გან დონ ენ ვინ ზენ თან ინ კან ლას მან ნარ ონ პარ ჟან რაე სან ტარ უნ ფარ ქან ღან ყარ შინ ჩინ ცან ძილ წილ ჭარ ხან ჯან ჰაე\n        names: [\n            \"\\u10D0\\u10DC\",\n            \"\\u10D1\\u10D0\\u10DC\",\n            \"\\u10D2\\u10D0\\u10DC\",\n            \"\\u10D3\\u10DD\\u10DC\",\n            \"\\u10D4\\u10DC\",\n            \"\\u10D5\\u10D8\\u10DC\",\n            \"\\u10D6\\u10D4\\u10DC\",\n            \"\\u10D7\\u10D0\\u10DC\",\n            \"\\u10D8\\u10DC\",\n            \"\\u10D9\\u10D0\\u10DC\",\n            \"\\u10DA\\u10D0\\u10E1\",\n            \"\\u10DB\\u10D0\\u10DC\",\n            \"\\u10DC\\u10D0\\u10E0\",\n            \"\\u10DD\\u10DC\",\n            \"\\u10DE\\u10D0\\u10E0\",\n            \"\\u10DF\\u10D0\\u10DC\",\n            \"\\u10E0\\u10D0\\u10D4\",\n            \"\\u10E1\\u10D0\\u10DC\",\n            \"\\u10E2\\u10D0\\u10E0\",\n            \"\\u10E3\\u10DC\",\n            \"\\u10E4\\u10D0\\u10E0\",\n            \"\\u10E5\\u10D0\\u10DC\",\n            \"\\u10E6\\u10D0\\u10DC\",\n            \"\\u10E7\\u10D0\\u10E0\",\n            \"\\u10E8\\u10D8\\u10DC\",\n            \"\\u10E9\\u10D8\\u10DC\",\n            \"\\u10EA\\u10D0\\u10DC\",\n            \"\\u10EB\\u10D8\\u10DA\",\n            \"\\u10EC\\u10D8\\u10DA\",\n            \"\\u10ED\\u10D0\\u10E0\",\n            \"\\u10EE\\u10D0\\u10DC\",\n            \"\\u10EF\\u10D0\\u10DC\",\n            \"\\u10F0\\u10D0\\u10D4\",\n            \"\\u10D4\\u10F2\",\n            \"\\u10F2\\u10D4\",\n            \"\\u10F3\\u10D4\",\n            \"\\u10F4\\u10D0\\u10E0\",\n            \"\\u10F0\\u10DD\\u10D4\",\n            \"\\u10F6\\u10D8\",\n            \"\\u10F7\\u10DC\",\n            \"\\u10F8\\u10D8\\u10DC\",\n            \"\\u10D2\\u10D0\\u10DC \\u10D0\\u10DB\\u10DD\\u10E2\\u10E0\\u10D8\\u10D0\\u10DA\\u10D4\\u10D1\\u10E3\\u10DA\\u10D8\",\n            \"\\u10D0\\u10D8\\u10DC \\u10D0\\u10DB\\u10DD\\u10E2\\u10E0\\u10D8\\u10D0\\u10DA\\u10D4\\u10D1\\u10E3\\u10DA\\u10D8\",\n            \"\\u10D2\\u10D0\\u10DB\\u10E7\\u10DD\\u10E4\\u10D8\",\n            \"\\u10DC\\u10D0\\u10E0 \\u10DB\\u10DD\\u10D3\\u10D8\\u10E4\\u10D8\\u10D9\\u10D0\\u10E2\\u10DD\\u10E0\\u10D8\",\n            \"\\u10D0\\u10D4\\u10DC\",\n            \"\\u10E1\\u10D8\\u10DB\\u10D0\\u10D2\\u10E0\\u10D8\\u10E1 \\u10DC\\u10D8\\u10E8\\u10D0\\u10DC\\u10D8\",\n            \"\\u10DA\\u10D0\\u10D1\\u10D8\\u10D0\\u10DA\\u10D8\\u10D6\\u10D0\\u10EA\\u10D8\\u10D8\\u10E1 \\u10DC\\u10D8\\u10E8\\u10D0\\u10DC\\u10D8\",\n            \"\\u10D0-\\u10E3\\u10DB\\u10DA\\u10D0\\u10E3\\u10E2\\u10D8\",\n            \"\\u10D0-\\u10DB\\u10D0\\u10D9\\u10E0\\u10DD\\u10DC\\u10D8\",\n            \"\\u10D0-\\u10DB\\u10D0\\u10D9\\u10E0\\u10DD\\u10DC-\\u10E3\\u10DB\\u10DA\\u10D0\\u10E3\\u10E2\\u10D8\",\n            \"\\u10D4-\\u10DB\\u10D0\\u10D9\\u10E0\\u10DD\\u10DC\\u10D8\",\n            \"\\u10D8-\\u10DB\\u10D0\\u10D9\\u10E0\\u10DD\\u10DC\\u10D8\",\n            \"\\u10DD-\\u10E3\\u10DB\\u10DA\\u10D0\\u10E3\\u10E2\\u10D8\",\n            \"\\u10DD-\\u10DB\\u10D0\\u10D9\\u10E0\\u10DD\\u10DC\\u10D8\",\n            \"\\u10DD-\\u10DB\\u10D0\\u10D9\\u10E0\\u10DD\\u10DC-\\u10E3\\u10DB\\u10DA\\u10D0\\u10E3\\u10E2\\u10D8\",\n            \"\\u10E3-\\u10E3\\u10DB\\u10DA\\u10D0\\u10E3\\u10E2\\u10D8\",\n            \"\\u10E3-\\u10DB\\u10D0\\u10D9\\u10E0\\u10DD\\u10DC\\u10D8\",\n            \"\\u10E3-\\u10DB\\u10D0\\u10D9\\u10E0\\u10DD\\u10DC-\\u10E3\\u10DB\\u10DA\\u10D0\\u10E3\\u10E2\\u10D8\",\n            \"\\u10E3-\\u10D1\\u10E0\\u10EF\\u10D2\\u10E3\",\n            \"\\u10F7\\u10DC-\\u10DB\\u10D0\\u10D9\\u10E0\\u10DD\\u10DC\\u10D8\"\n        ],\n        // Modern unicameral Georgian script developed in 10th century \n        mkhedruli: [\n            \"\\u10D0\",\n            \"\\u10D1\",\n            \"\\u10D2\",\n            \"\\u10D3\",\n            \"\\u10D4\",\n            \"\\u10D5\",\n            \"\\u10D6\",\n            \"\\u10D7\",\n            \"\\u10D8\",\n            \"\\u10D9\",\n            \"\\u10DA\",\n            \"\\u10DB\",\n            \"\\u10DC\",\n            \"\\u10DD\",\n            \"\\u10DE\",\n            \"\\u10DF\",\n            \"\\u10E0\",\n            \"\\u10E1\",\n            \"\\u10E2\",\n            \"\\u10E3\",\n            \"\\u10E4\",\n            \"\\u10E5\",\n            \"\\u10E6\",\n            \"\\u10E7\",\n            \"\\u10E8\",\n            \"\\u10E9\",\n            \"\\u10EA\",\n            \"\\u10EB\",\n            \"\\u10EC\",\n            \"\\u10ED\",\n            \"\\u10EE\",\n            \"\\u10EF\",\n            \"\\u10F0\",\n            \"\\u10F1\",\n            \"\\u10F2\",\n            \"\\u10F3\",\n            \"\\u10F4\",\n            \"\\u10F5\",\n            \"\\u10F6\",\n            \"\\u10F7\",\n            \"\\u10F8\",\n            \"\\u10F9\",\n            \"\\u10FA\",\n            \"\\u10FB\",\n            \"\\u10FC\",\n            \"\\u10FD\",\n            \"\\u10FE\",\n            \"\\u10FF\",\n            \"\\u10D0\\u0308\",\n            \"\\u10D0\\u0304\",\n            \"\\u10D0\\u0304\\u0308\",\n            \"\\u10D4\\u0304\",\n            \"\\u10D8\\u0304\",\n            \"\\u10DD\\u0308\",\n            \"\\u10DD\\u0304\",\n            \"\\u10DD\\u0304\\u0308\",\n            \"\\u10E3\\u0308\",\n            \"\\u10E3\\u0304\",\n            \"\\u10E3\\u0304\\u0308\",\n            \"\\u10E3\\u0302\",\n            \"\\u10F7\\u0304\"\n        ],\n        // Modern unicameral derivative script of Mkhedruli only used for headlines in all-caps\n        mtavruli: [\n            \"\\u1C90\",\n            \"\\u1C91\",\n            \"\\u1C92\",\n            \"\\u1C93\",\n            \"\\u1C94\",\n            \"\\u1C95\",\n            \"\\u1C96\",\n            \"\\u1C97\",\n            \"\\u1C98\",\n            \"\\u1C99\",\n            \"\\u1C9A\",\n            \"\\u1C9B\",\n            \"\\u1C9C\",\n            \"\\u1C9D\",\n            \"\\u1C9E\",\n            \"\\u1C9F\",\n            \"\\u1CA0\",\n            \"\\u1CA1\",\n            \"\\u1CA2\",\n            \"\\u1CA3\",\n            \"\\u1CA4\",\n            \"\\u1CA5\",\n            \"\\u1CA6\",\n            \"\\u1CA7\",\n            \"\\u1CA8\",\n            \"\\u1CA9\",\n            \"\\u1CAA\",\n            \"\\u1CAB\",\n            \"\\u1CAC\",\n            \"\\u1CAD\",\n            \"\\u1CAE\",\n            \"\\u1CAF\",\n            \"\\u1CB0\",\n            \"\\u1CB1\",\n            \"\\u1CB2\",\n            \"\\u1CB3\",\n            \"\\u1CB4\",\n            \"\\u1CB5\",\n            \"\\u1CB6\",\n            \"\\u1CB7\",\n            \"\\u1CB8\",\n            \"\\u1CB9\",\n            \"\\u1CBA\",\n            \"\",\n            \"\",\n            \"\\u1CBD\",\n            \"\\u1CBE\",\n            \"\\u1CBF\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        // Original Georgian alphabet from 5th century\n        asomtavruli: [\n            \"\\u10A0\",\n            \"\\u10A1\",\n            \"\\u10A2\",\n            \"\\u10A3\",\n            \"\\u10A4\",\n            \"\\u10A5\",\n            \"\\u10A6\",\n            \"\\u10A7\",\n            \"\\u10A8\",\n            \"\\u10A9\",\n            \"\\u10AA\",\n            \"\\u10AB\",\n            \"\\u10AC\",\n            \"\\u10AD\",\n            \"\\u10AE\",\n            \"\\u10AF\",\n            \"\\u10B0\",\n            \"\\u10B1\",\n            \"\\u10B2\",\n            \"\\u10B3\",\n            \"\\u10B4\",\n            \"\\u10B5\",\n            \"\\u10B6\",\n            \"\\u10B7\",\n            \"\\u10B8\",\n            \"\\u10B9\",\n            \"\\u10BA\",\n            \"\\u10BB\",\n            \"\\u10BC\",\n            \"\\u10BD\",\n            \"\\u10BE\",\n            \"\\u10BF\",\n            \"\\u10C0\",\n            \"\\u10C1\",\n            \"\\u10C2\",\n            \"\\u10C3\",\n            \"\\u10C4\",\n            \"\\u10C5\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        // Second script of Georgian alphabet first appearing in 9th century\n        nuskhuri: [\n            \"\\u2D00\",\n            \"\\u2D01\",\n            \"\\u2D02\",\n            \"\\u2D03\",\n            \"\\u2D04\",\n            \"\\u2D05\",\n            \"\\u2D06\",\n            \"\\u2D07\",\n            \"\\u2D08\",\n            \"\\u2D09\",\n            \"\\u2D0A\",\n            \"\\u2D0B\",\n            \"\\u2D0C\",\n            \"\\u2D0D\",\n            \"\\u2D0E\",\n            \"\\u2D0F\",\n            \"\\u2D10\",\n            \"\\u2D11\",\n            \"\\u2D12\",\n            \"\\u2D13\",\n            \"\\u2D14\",\n            \"\\u2D15\",\n            \"\\u2D16\",\n            \"\\u2D17\",\n            \"\\u2D18\",\n            \"\\u2D19\",\n            \"\\u2D1A\",\n            \"\\u2D1B\",\n            \"\\u2D1C\",\n            \"\\u2D1D\",\n            \"\\u2D1E\",\n            \"\\u2D1F\",\n            \"\\u2D20\",\n            \"\\u2D21\",\n            \"\\u2D22\",\n            \"\\u2D23\",\n            \"\\u2D24\",\n            \"\\u2D25\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        // Collection of letters from all around the world that resemble Mkhedruli\n        homoglyph: [\n            \"\\u2D22\",\n            \"\\u0571\",\n            \"\\u0B0C\",\n            \"\\u1566\",\n            \"\\u1045\",\n            \"\\u19C6\",\n            \"\\u0B6B\",\n            \"\\u198E\",\n            \"\\u200E\\u19B5\",\n            \"\\u0AE9\",\n            \"\\u2D1D\",\n            \"\\u2D0B\",\n            \"\\u099A\",\n            \"\\u1982\",\n            \"\\u1CB4\",\n            \"\\u0AB3\",\n            \"\\u199D\",\n            \"\\u1491\",\n            \"\\u0B95\\u0BC1\",\n            \"\\u19D7\",\n            \"\\u1980\",\n            \"\\u2D15\",\n            \"\\u2D1C\",\n            \"\\u19C7\",\n            \"\\uD804\\uDDE4\",\n            \"\\u2D0C\",\n            \"\\u0A89\",\n            \"\\u147B\",\n            \"\\u10EC\",\n            \"\\u10ED\",\n            \"\\u1579\",\n            \"\\u2D1F\",\n            \"\\u1CB1\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        // Zalgo crazy text using diacritics\n        // zalgo : [],\n        // International Phonetic Association (IPA) \n        phonetic: [\n            \"\\u0251\",\n            \"b\",\n            \"g\",\n            \"d\",\n            \"\\u025B\",\n            \"v\",\n            \"z\",\n            \"t\\u02B0\",\n            \"i\",\n            \"k'\",\n            \"l\",\n            \"m\",\n            \"n\",\n            \"\\u0254\",\n            \"p'\",\n            \"\\u0292\",\n            \"r\",\n            \"s\",\n            \"t'\",\n            \"u\",\n            \"p\\u02B0\",\n            \"k\\u02B0\",\n            \"\\u0281\",\n            \"q'\",\n            \"\\u0283\",\n            \"t\\u0361\\u0283\",\n            \"t\\u0361s\",\n            \"d\\u0361z\",\n            \"t\\u0361s\\u02BC\",\n            \"t\\u0361\\u0283\\u02BC\",\n            \"\\u03C7\",\n            \"d\\u0361\\u0292\",\n            \"h\",\n            \"e\\u026A\",\n            \"j\",\n            \"w\",\n            \"q\\u02B0\",\n            \"o\\u02D0\",\n            \"f\",\n            \"\\u0259\",\n            \"\\u0294\",\n            \"\\u0262\",\n            \"\\u0295\",\n            \"\",\n            \"\\u25CC\\u0303\",\n            \"\\u0259\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        // Commonly adopted romanization as seen on social media\n        common: [\n            \"a\",\n            \"b\",\n            \"g\",\n            \"d\",\n            \"e\",\n            \"v\",\n            \"z\",\n            \"t\",\n            \"i\",\n            \"k\",\n            \"l\",\n            \"m\",\n            \"n\",\n            \"o\",\n            \"p\",\n            \"zh\",\n            \"r\",\n            \"s\",\n            \"t\",\n            \"u\",\n            \"f\",\n            \"q\",\n            \"gh\",\n            \"y\",\n            \"sh\",\n            \"ch\",\n            \"c\",\n            \"dz\",\n            \"ts\",\n            \"tch\",\n            \"x\",\n            \"j\",\n            \"h\",\n            \"e\",\n            \"i\",\n            \"ui\",\n            \"x\",\n            \"hoi\",\n            \"f\",\n            \"oa\",\n            \"h\",\n            \"gh\",\n            \"rgh\",\n            \"\",\n            \"\",\n            \"oa\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        // Georgian alphabet cyrillization \n        cyrillic: [\n            \"\\u0430\",\n            \"\\u0431\",\n            \"\\u0433\",\n            \"\\u0434\",\n            \"\\u0435\",\n            \"\\u0432\",\n            \"\\u0437\",\n            \"\\u0442\",\n            \"\\u0438\",\n            \"\\u043A\",\n            \"\\u043B\",\n            \"\\u043C\",\n            \"\\u043D\",\n            \"\\u043E\",\n            \"\\u043F\",\n            \"\\u0436\",\n            \"\\u0440\",\n            \"\\u0441\",\n            \"\\u0442\",\n            \"\\u0443\",\n            \"\\u0444\",\n            \"\\u043A\",\n            \"\\u0433\",\n            \"\\u043A\",\n            \"\\u0448\",\n            \"\\u0447\",\n            \"\\u0446\",\n            \"\\u0434\\u0437\",\n            \"\\u0442\\u0446\",\n            \"\\u0442\\u0447\",\n            \"\\u0445\",\n            \"\\u0434\\u0436\",\n            \"\\u0445\",\n            \"\\u0435\",\n            \"\\u0439\",\n            \"\\u0443\\u0439\",\n            \"\\u0445\",\n            \"\\u0445\\u043E\",\n            \"\\u0444\",\n            \"\\u043E\\u0430\",\n            \"\\u0445\",\n            \"\\u0433\",\n            \"\\u0440\\u0433\",\n            \"\",\n            \"\",\n            \"\\u043E\\u0430\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        // Georgian alphabet hellenization \n        greek: [\n            \"\\u03B1\",\n            \"\\u03BC\\u03C0\",\n            \"\\u03B3\\u03B3\",\n            \"\\u03BD\\u03C4\",\n            \"\\u03B5\",\n            \"\\u03B2\",\n            \"\\u03B6\",\n            \"\\u03C4\",\n            \"\\u03B7\",\n            \"\\u03BA\",\n            \"\\u03BB\",\n            \"\\u03BC\",\n            \"\\u03BD\",\n            \"\\u03BF\",\n            \"\\u03C0\",\n            \"\\u03B6\\u0371\",\n            \"\\u03C1\",\n            \"\\u03C3\",\n            \"\\u03C4\",\n            \"\\u03BF\\u03C5\",\n            \"\\u03C8\",\n            \"\\u03BA\",\n            \"\\u03B3\",\n            \"\\u03BA\\u0371\",\n            \"\\u03C3\\u0371\",\n            \"\\u03C4\\u03C3\",\n            \"\\u03C4\\u03C3\",\n            \"\\u03B4\\u03B6\",\n            \"\\u03C4\\u03C3\",\n            \"\\u03C4\\u03C3\\u0371\",\n            \"\\u03B3\\u03C7\",\n            \"\\u03C4\\u03B6\",\n            \"\\u0371\",\n            \"\\u03B5\",\n            \"\\u03B9\",\n            \"\\u03C5\\u03B9\",\n            \"\\u03BA\\u03C7\",\n            \"\\u0371\\u03BF\\u03B9\",\n            \"\\u03C6\",\n            \"\\u03BF\\u03B1\",\n            \"\\u0371\",\n            \"\\u03B3\",\n            \"\\u03C1\\u03B3\",\n            \"\",\n            \"\",\n            \"\\u03BF\\u03B1\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        // Georgian alphabet armenianization \n        armenian: [\n            \"\\u0561\",\n            \"\\u0562\",\n            \"\\u0563\",\n            \"\\u0564\",\n            \"\\u0567\",\n            \"\\u057E\",\n            \"\\u0566\",\n            \"\\u0569\",\n            \"\\u056B\",\n            \"\\u056F\",\n            \"\\u056C\",\n            \"\\u0574\",\n            \"\\u0576\",\n            \"\\u0585\",\n            \"\\u057A\",\n            \"\\u056A\",\n            \"\\u057C\",\n            \"\\u057D\",\n            \"\\u057F\",\n            \"\\u0578\\u0582\",\n            \"\\u0583\",\n            \"\\u0584\",\n            \"\\u0572\",\n            \"\\u056F\\u0570\",\n            \"\\u0577\",\n            \"\\u0579\",\n            \"\\u0581\",\n            \"\\u0571\",\n            \"\\u056E\",\n            \"\\u0573\",\n            \"\\u056D\",\n            \"\\u057B\",\n            \"\\u0570\",\n            \"\\u0567\",\n            \"\\u056B\",\n            \"\\u0578\\u0582\\u056B\",\n            \"\\u056D\",\n            \"\\u0570\\u0585\\u056B\",\n            \"\\u0586\",\n            \"\\u0568\",\n            \"\\u0570\",\n            \"\\u0572\",\n            \"\\u057C\\u0572\",\n            \"\",\n            \"\",\n            \"\\u0568\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        // International Standards Organization (http://www.iso.ch) as shown in Apridonidze et al. and UNGEGN\n        iso_9984: [\n            \"a\",\n            \"b\",\n            \"g\",\n            \"d\",\n            \"e\",\n            \"v\",\n            \"z\",\n            \"t'\",\n            \"i\",\n            \"k\",\n            \"l\",\n            \"m\",\n            \"n\",\n            \"o\",\n            \"p\",\n            \"\\u017E\",\n            \"r\",\n            \"s\",\n            \"t\",\n            \"u\",\n            \"p'\",\n            \"k'\",\n            \"\\u1E21\",\n            \"q\",\n            \"\\u0161\",\n            \"\\u010D'\",\n            \"c'\",\n            \"j\",\n            \"c\",\n            \"\\u010D\",\n            \"x\",\n            \"\\u01F0\",\n            \"h\",\n            \"\\u0113\",\n            \"y\",\n            \"w\",\n            \"\\u1E96'\",\n            \"\\u014D\",\n            \"f\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        //  The national system of romanization adopted in February 2002 by the State Department of Geodesy and Cartography of Georgia and the Institute of Linguistics, Georgian Academy of Sciences\n        national: [\n            \"a\",\n            \"b\",\n            \"g\",\n            \"d\",\n            \"e\",\n            \"v\",\n            \"z\",\n            \"t\",\n            \"i\",\n            \"k'\",\n            \"l\",\n            \"m\",\n            \"n\",\n            \"o\",\n            \"p'\",\n            \"zh\",\n            \"r\",\n            \"s\",\n            \"t'\",\n            \"u\",\n            \"p\",\n            \"k\",\n            \"gh\",\n            \"q'\",\n            \"sh\",\n            \"ch\",\n            \"ts\",\n            \"dz\",\n            \"ts'\",\n            \"ch'\",\n            \"kh\",\n            \"j\",\n            \"h\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        // Iberiul-K’avk’asiuri enatmetsnierebis ts’elits’deuli [Annual of Ibero-Caucasian Linguistics] as shown in The World’s Writing Systems. Variant forms separated with a slash\n        // ike : [],\n        // American Library Association/Library of Congress.\n        // ala_lc : [],\n        // Kohanimeandmebaas (Place Names Database) of Eesti Keele Instituut (Institute of the Estonian Language) (http://www.eki.ee).\n        // knab : [],\n        // United States Board on Geographic Names and the Permanent Committee on Geographical Names for British Official Use\n        bgn: [\n            \"a\",\n            \"b\",\n            \"g\",\n            \"d\",\n            \"e\",\n            \"v\",\n            \"z\",\n            \"t'\",\n            \"i\",\n            \"k\",\n            \"l\",\n            \"m\",\n            \"n\",\n            \"o\",\n            \"p\",\n            \"zh\",\n            \"r\",\n            \"s\",\n            \"t\",\n            \"u\",\n            \"p'\",\n            \"k'\",\n            \"gh\",\n            \"q\",\n            \"sh\",\n            \"ch'\",\n            \"ts'\",\n            \"dz\",\n            \"ts\",\n            \"ch\",\n            \"kh\",\n            \"j\",\n            \"h\",\n            \"ey\",\n            \"j\",\n            \"\",\n            \"q'\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        // Thesaurus Indogermanischer Text- und Sprachmaterialien (http://titus.uni-frankfurt.de)\n        titus: [\n            \"a\",\n            \"b\",\n            \"g\",\n            \"d\",\n            \"e\",\n            \"v\",\n            \"z\",\n            \"t\",\n            \"i\",\n            \"\\u1E33\",\n            \"l\",\n            \"m\",\n            \"n\",\n            \"o\",\n            \"\\u1E57\",\n            \"\\u017E\",\n            \"r\",\n            \"s\",\n            \"\\u1E6D\",\n            \"u\",\n            \"p\",\n            \"k\",\n            \"\\u0121\",\n            \"q\\u0307\",\n            \"\\u0161\",\n            \"\\u010D\",\n            \"c\",\n            \"\\u04E1\",\n            \"c\\u0323\",\n            \"\\u010D\\u0323\",\n            \"x\",\n            \"\\u01EF\",\n            \"h\",\n            \"\\u0113\",\n            \"y\",\n            \"w\",\n            \"q\",\n            \"\\u014D\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        // Latin to Georgian QWERTY keyboard mapping used for older fonts\n        qwerty: [\n            \"a\",\n            \"b\",\n            \"g\",\n            \"d\",\n            \"e\",\n            \"v\",\n            \"z\",\n            \"T\",\n            \"i\",\n            \"k\",\n            \"l\",\n            \"m\",\n            \"n\",\n            \"o\",\n            \"p\",\n            \"J\",\n            \"r\",\n            \"s\",\n            \"t\",\n            \"u\",\n            \"f\",\n            \"q\",\n            \"R\",\n            \"y\",\n            \"S\",\n            \"C\",\n            \"c\",\n            \"Z\",\n            \"w\",\n            \"W\",\n            \"x\",\n            \"j\",\n            \"h\",\n            \"E\",\n            \"I\",\n            \"V\",\n            \"X\",\n            \"H\",\n            \"F\",\n            \"D\",\n            \"Y\",\n            \"G\",\n            \"L\",\n            \">\",\n            \"N\",\n            \"<\",\n            \"{\",\n            \"}\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ],\n        // Numeric values\n        numeric: [\n            \"1\",\n            \"2\",\n            \"3\",\n            \"4\",\n            \"5\",\n            \"6\",\n            \"7\",\n            \"9\",\n            \"10\",\n            \"20\",\n            \"30\",\n            \"40\",\n            \"50\",\n            \"70\",\n            \"80\",\n            \"90\",\n            \"100\",\n            \"200\",\n            \"300\",\n            \"400\",\n            \"500\",\n            \"600\",\n            \"700\",\n            \"800\",\n            \"900\",\n            \"1000\",\n            \"2000\",\n            \"3000\",\n            \"4000\",\n            \"5000\",\n            \"6000\",\n            \"8000\",\n            \"9000\",\n            \"8\",\n            \"60\",\n            \"400\",\n            \"7000\",\n            \"10000\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\",\n            \"\"\n        ]\n    },\n    start: {\n        mkhedruli: 4304,\n        mtavruli: 7312,\n        asomtavruli: 4256,\n        nuskhuri: 11520,\n        latin: 97\n    },\n    regex: {\n        mkhedruli: /[ა-ჿ]/,\n        mtavruli: /[Ა-Ჿ]/,\n        asomtavruli: /[Ⴀ-Ⴥ]/,\n        nuskhuri: /[ⴀ-ⴥ]/,\n        latin: /[a-zA-Z]/,\n        cyrillic: /[А-Яа-я]/\n    }\n};\n\n\n\nconst $73643bc0a02e5d79$export$b90e0603966ac6a0 = (dir)=>{\n    var aliases = {\n        \"\\u10DB\\u10EE\\u10D4\\u10D3\\u10E0\\u10E3\\u10DA\\u10D8\": \"mkhedruli\",\n        \"\\u10D0\\u10E1\\u10DD\\u10DB\\u10D7\\u10D0\\u10D5\\u10E0\\u10E3\\u10DA\\u10D8\": \"asomtavruli\",\n        \"\\u10DC\\u10E3\\u10E1\\u10EE\\u10E3\\u10E0\\u10D8\": \"nuskhuri\",\n        \"\\u10DB\\u10D7\\u10D0\\u10D5\\u10E0\\u10E3\\u10DA\\u10D8\": \"mtavruli\",\n        \"\\u10EE\\u10E3\\u10EA\\u10E3\\u10E0\\u10D8\": \"khutsuri\",\n        \"\\u10E8\\u10D0\\u10DC\\u10D8\\u10EB\\u10D8\\u10E1\\u10D4\\u10E3\\u10DA\\u10D8\": \"shanidziseuli\",\n        \"\\u10E2\\u10E4\\u10D8\\u10DA\\u10D4\\u10DA\\u10D8\\u10E1\\u10D4\\u10E3\\u10DA\\u10D8\": \"tfileliseuli\",\n        \"\\u10D0\\u10DC\\u10D1\\u10D0\\u10DC\\u10D8\\u10E1 \\u10DB\\u10D7\\u10D0\\u10D5\\u10E0\\u10E3\\u10DA\\u10D8\": \"anbanismtavruli\",\n        \"\\u10F0\\u10DD\\u10DB\\u10DD\\u10D2\\u10DA\\u10D8\\u10E4\\u10D8\": \"homoglyph\",\n        \"\\u10E4\\u10DD\\u10DC\\u10D4\\u10E2\\u10D8\\u10D9\\u10E3\\u10E0\\u10D8\": \"phonetic\",\n        \"\\u10DA\\u10D0\\u10D7\\u10D8\\u10DC\\u10E3\\u10E0\\u10D8\": \"qwerty\",\n        \"\\u10D9\\u10D8\\u10E0\\u10D8\\u10DA\\u10D8\\u10EA\\u10D0\": \"cyrillic\",\n        \"\\u10D1\\u10D4\\u10E0\\u10EB\\u10DC\\u10E3\\u10DA\\u10D8\": \"greek\",\n        \"\\u10E1\\u10DD\\u10DB\\u10EE\\u10E3\\u10E0\\u10D8\": \"armenian\",\n        \"\\u10DC\\u10D0\\u10EA\\u10D8\\u10DD\\u10DC\\u10D0\\u10DA\\u10E3\\u10E0\\u10D8\": \"national\",\n        \"\\u10E5\\u10D5\\u10D4\\u10E0\\u10D7\\u10D8\": \"qwerty\",\n        \"\\u10D6\\u10DD\\u10D2\\u10D0\\u10D3\\u10D8\": \"common\",\n        \"\\u10E2\\u10E0\\u10D0\\u10DC\\u10E1\\u10D9\\u10E0\\u10D8\\u10E4\\u10EA\\u10D8\\u10D0\": \"common\",\n        \"\\u10D8\\u10E1\\u10DD\": \"iso_9984\",\n        \"\\u10D1\\u10D2\\u10DC\": \"bgn\"\n    };\n    Object.keys(aliases).forEach(function(key) {\n        if (key == dir.from) dir.from = aliases[key];\n        if (key == dir.to) dir.to = aliases[key];\n    });\n};\nconst $73643bc0a02e5d79$export$b0f773ea32aeb296 = (dir)=>{\n    let permitted_from = [\n        \"mkhedruli\",\n        \"asomtavruli\",\n        \"nuskhuri\",\n        \"mtavruli\",\n        \"qwerty\"\n    ];\n    let permitted_to = [];\n    if (permitted_from.indexOf(dir.from) == -1) throw `Text conversion from '${dir.from}' is not supported.`;\n// if (permitted_to.indexOf(dir.to) == -1)\n//     throw `Text conversion to '${dir.to}' is not supported.`;\n};\nconst $73643bc0a02e5d79$export$b8eebb19b62ac6cd = (str)=>{\n    return [\n        (0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).regex.cyrillic.test(str)\n    ].some((testResult)=>testResult == true);\n};\nconst $73643bc0a02e5d79$export$40b880626ad803ac = (to)=>{\n    return to == \"tfileliseuli\" || to == \"shanidziseuli\" || to == \"khutsuri\" || to == \"anbanismtavruli\";\n};\nString.prototype.setCharAt = function(where, what, offset) {\n    offset = offset || 0;\n    if (where > this.length - 1) return this;\n    return this.substring(0, where) + what + this.substring(where + what.length + offset);\n};\nconst $73643bc0a02e5d79$export$d80c591a9e16646 = (word, from, to)=>{\n    let char = (0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).alphabets[to][(0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).alphabets[from].indexOf(word[0])];\n    char = char == undefined ? word[0] : char;\n    return word.setCharAt(0, char);\n};\nconst $73643bc0a02e5d79$export$6ee99fcdec9a113e = (str, idx)=>{\n    if (idx < 0) return \"qwerty\";\n    if ((0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).regex.mkhedruli.test(str[idx])) return \"mkhedruli\";\n    if ((0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).regex.latin.test(str[idx])) return \"qwerty\";\n    if ((0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).regex.asomtavruli.test(str[idx])) return \"asomtavruli\";\n    if ((0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).regex.mtavruli.test(str[idx])) return \"mtavruli\";\n    if ((0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).regex.nuskhuri.test(str[idx])) return \"nuskhuri\";\n    return $73643bc0a02e5d79$export$6ee99fcdec9a113e(str, idx - 1);\n};\nconst $73643bc0a02e5d79$export$a43a4096c689c3b0 = (str)=>{\n    /* MATCHES ALPHABETS [Mkhedruli, Mtavruli, Asomtavruli, Nuskhuri, Latin, Cyrillic] */ let vector = [\n        (0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).regex.mkhedruli.test(str),\n        (0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).regex.mtavruli.test(str),\n        (0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).regex.asomtavruli.test(str),\n        (0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).regex.nuskhuri.test(str),\n        (0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).regex.latin.test(str),\n        (0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).regex.cyrillic.test(str)\n    ];\n    // Georgian alphabets\n    if ($73643bc0a02e5d79$export$18ac18efd9e98d41(vector, [\n        true,\n        false,\n        false,\n        false,\n        false,\n        false\n    ])) return \"mkhedruli\";\n    if ($73643bc0a02e5d79$export$18ac18efd9e98d41(vector, [\n        false,\n        true,\n        false,\n        false,\n        false,\n        false\n    ])) return \"mtavruli\";\n    if ($73643bc0a02e5d79$export$18ac18efd9e98d41(vector, [\n        false,\n        false,\n        true,\n        false,\n        false,\n        false\n    ])) return \"asomtavruli\";\n    if ($73643bc0a02e5d79$export$18ac18efd9e98d41(vector, [\n        false,\n        false,\n        false,\n        true,\n        false,\n        false\n    ])) return \"nuskhuri\";\n    // Georgian bicameral writings\n    if ($73643bc0a02e5d79$export$18ac18efd9e98d41(vector, [\n        true,\n        true,\n        false,\n        false,\n        false,\n        false\n    ])) return \"tfileliseuli\";\n    if ($73643bc0a02e5d79$export$18ac18efd9e98d41(vector, [\n        true,\n        false,\n        true,\n        false,\n        false,\n        false\n    ])) return \"shanidziseuli\";\n    if ($73643bc0a02e5d79$export$18ac18efd9e98d41(vector, [\n        false,\n        false,\n        true,\n        true,\n        false,\n        false\n    ])) return \"khutsuri\";\n    if ($73643bc0a02e5d79$export$18ac18efd9e98d41(vector, [\n        false,\n        true,\n        true,\n        false,\n        false,\n        false\n    ])) return \"anbanismtavruli\";\n    // Non-Georgian alphabets\n    if ($73643bc0a02e5d79$export$18ac18efd9e98d41(vector, [\n        false,\n        false,\n        false,\n        false,\n        true,\n        false\n    ])) return \"latin\";\n    if ($73643bc0a02e5d79$export$18ac18efd9e98d41(vector, [\n        false,\n        false,\n        false,\n        false,\n        false,\n        true\n    ])) return \"cyrillic\";\n    return vector;\n};\nconst $73643bc0a02e5d79$export$dde21faefb0431d0 = (char)=>char.charCodeAt(0);\nconst $73643bc0a02e5d79$export$43f7a1464f2f24ee = (code)=>String.fromCharCode(code);\nconst $73643bc0a02e5d79$export$18ac18efd9e98d41 = (b1, b2)=>{\n    for(let i = 0, len = b1.length; i < len; i++){\n        if (b1[i] != b2[i]) return false;\n    }\n    return true;\n};\nvar $73643bc0a02e5d79$export$2e2bcd8739ae039 = {\n    checkForAliases: $73643bc0a02e5d79$export$b90e0603966ac6a0,\n    checkForDirection: $73643bc0a02e5d79$export$b0f773ea32aeb296,\n    isUnsupported: $73643bc0a02e5d79$export$b8eebb19b62ac6cd,\n    isBicameral: $73643bc0a02e5d79$export$40b880626ad803ac,\n    toUpperCase: $73643bc0a02e5d79$export$d80c591a9e16646,\n    detectAlphabet: $73643bc0a02e5d79$export$6ee99fcdec9a113e,\n    classifyText: $73643bc0a02e5d79$export$a43a4096c689c3b0,\n    cca: $73643bc0a02e5d79$export$dde21faefb0431d0,\n    fcc: $73643bc0a02e5d79$export$43f7a1464f2f24ee,\n    isSame: $73643bc0a02e5d79$export$18ac18efd9e98d41\n};\n\n\nconst $821ec095051e6a95$export$9c68d69a4c5bbcf9 = (str, from, to)=>{\n    let dir = {\n        from: from,\n        to: to\n    };\n    (0, $73643bc0a02e5d79$export$b90e0603966ac6a0)(dir);\n    (0, $73643bc0a02e5d79$export$b0f773ea32aeb296)(dir);\n    return $821ec095051e6a95$export$2187bb99d29a0da7(str, dir.from, dir.to);\n};\nconst $821ec095051e6a95$export$67beed298888a38b = (str, to)=>{\n    let dir = {\n        to: to\n    };\n    (0, $73643bc0a02e5d79$export$b90e0603966ac6a0)(dir);\n    if (str != null) {\n        if ((0, $73643bc0a02e5d79$export$40b880626ad803ac)(dir.to)) return $821ec095051e6a95$export$17d8eddb2796154a(str, (0, $73643bc0a02e5d79$export$6ee99fcdec9a113e)(str, str.length - 1), dir.to);\n        else return $821ec095051e6a95$export$baad8515b31b26e5(str, (0, $73643bc0a02e5d79$export$6ee99fcdec9a113e)(str, str.length - 1), dir.to);\n    }\n};\nconst $821ec095051e6a95$export$baad8515b31b26e5 = (str, from, to)=>{\n    let converted = \"\";\n    for(let i = 0, len = str.length; i < len; i++){\n        let key = (0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).alphabets[to][(0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).alphabets[from].indexOf(str[i])];\n        converted += key === undefined ? str[i] : key;\n    }\n    return converted;\n};\nconst $821ec095051e6a95$export$17d8eddb2796154a = (str, from, to)=>{\n    const rules = {\n        \"anbanismtavruli\": {\n            upper: \"asomtavruli\",\n            lower: \"mtavruli\"\n        },\n        \"tfileliseuli\": {\n            upper: \"mtavruli\",\n            lower: \"mkhedruli\"\n        },\n        \"shanidziseuli\": {\n            upper: \"asomtavruli\",\n            lower: \"mkhedruli\"\n        },\n        \"khutsuri\": {\n            upper: \"asomtavruli\",\n            lower: \"nuskhuri\"\n        }\n    };\n    let upperScript = rules[to].upper;\n    let lowerScript = rules[to].lower;\n    let converted = \"\";\n    for(let i = 0, len = str.length; i < len; i++){\n        let key = (0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).alphabets[lowerScript][(0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).alphabets[from].indexOf(str[i])];\n        converted += key === undefined ? str[i] : key;\n    }\n    // First Letter\n    converted = (0, $73643bc0a02e5d79$export$d80c591a9e16646)(converted, lowerScript, upperScript);\n    // Letters after punctuation \n    let matched = converted.match(/[?.!]\\s+[A-zႠ-ჰⴀ-ⴠᲐ-Ჰ0-9]/g);\n    if (matched != null) for(let i = 0; i < matched.length; i++)converted = converted.setCharAt(converted.indexOf(matched[i]), matched[i].substring(0, matched[i].length - 1).concat((0, $73643bc0a02e5d79$export$d80c591a9e16646)(matched[i][matched[i].length - 1], lowerScript, upperScript)));\n    // Letters after special character ' apostrophe\n    matched = converted.match(/[Ⴀ-ჰⴀ-ⴠᲐ-Ჰ]\\'/g);\n    if (matched != null) for(let i = 0; i < matched.length; i++)converted = converted.setCharAt(converted.indexOf(matched[i]), (0, $73643bc0a02e5d79$export$d80c591a9e16646)(matched[i][0], lowerScript, upperScript), 1);\n    return converted;\n};\nconst $821ec095051e6a95$export$2187bb99d29a0da7 = (str, from, to)=>{\n    if (str != null) {\n        if (!(0, $73643bc0a02e5d79$export$40b880626ad803ac)(to)) return $821ec095051e6a95$export$baad8515b31b26e5(str, from, to);\n        else return $821ec095051e6a95$export$17d8eddb2796154a(str, from, to);\n    }\n};\nvar $821ec095051e6a95$export$2e2bcd8739ae039 = {\n    convert: $821ec095051e6a95$export$9c68d69a4c5bbcf9,\n    interpret: $821ec095051e6a95$export$67beed298888a38b,\n    $: (0, $73643bc0a02e5d79$export$a43a4096c689c3b0)\n};\n\n\nconst $d90013e23dc65086$var$data = {};\n/* Frequencies for (for Vefxistyaosani)\n- words - 40989\n- dot - 1878\n- comma - 8479\n- exclamation - 588\n- question - 286\n*/ $d90013e23dc65086$var$data.frequency = {\n    general: {\n        \".\": 0.0458171705,\n        \",\": 0.206860377,\n        \"!\": 0.0143453122,\n        \"?\": 0.00697748176\n    },\n    summed: [\n        [\n            \"?\",\n            0.00697748176\n        ],\n        [\n            \"!\",\n            0.02132279396\n        ],\n        [\n            \".\",\n            0.06713996445\n        ],\n        [\n            \",\",\n            0.27400034145\n        ]\n    ]\n};\n// 100 random words generated using char-rnn \n$d90013e23dc65086$var$data.vefxwords = [\n    \"\\u10D2\\u10D0\\u10DB\\u10D8\\u10E8\\u10D5\\u10E8\\u10D4\\u10E1\",\n    \"\\u10DB\\u10D0\\u10E0\\u10D7\\u10D0\\u10DA\\u10D8\\u10DE\\u10D8\",\n    \"\\u10E8\\u10D4\\u10DB\\u10DD\\u10DB\\u10DD\\u10EA\\u10D8\\u10D5\\u10D4\",\n    \"\\u10D5\\u10E3\\u10EE\\u10D5\\u10D0\",\n    \"\\u10D2\\u10D0\\u10D5\\u10DA\\u10E1\\u10DD\\u10D1\\u10D0\",\n    \"\\u10D2\\u10D0\\u10DC\\u10D3\\u10D4\\u10D5\\u10D0\\u10DC\\u10D2\\u10D0\\u10D0\",\n    \"\\u10DB\\u10DD\\u10D0\\u10E1\\u10D4\\u10EE\\u10D4\\u10E1\",\n    \"\\u10D0\\u10E5\\u10D0\\u10DB\\u10D3\\u10E1\\u10D0\\u10D2\\u10D4\\u10D1\\u10D4\\u10DC\",\n    \"\\u10E8\\u10D5\\u10D4\\u10DC\\u10D8\\u10DC\\u10D4\",\n    \"\\u10E3\\u10D2\\u10D0\\u10DC\\u10D3\\u10D4\\u10D2\\u10DD\",\n    \"\\u10E5\\u10D0\\u10DC\\u10E3\\u10DA\\u10D9\\u10E3\\u10DA\\u10DC\\u10D8\",\n    \"\\u10D2\\u10D4\\u10DB\\u10E0\\u10E3\\u10E4\\u10D4\\u10DC\",\n    \"\\u10D5\\u10D4\\u10E6\\u10D0\\u10D7\",\n    \"\\u10DB\\u10D8\\u10D5\\u10D8\\u10E1\\u10EA\\u10D0\",\n    \"\\u10DB\\u10E3\\u10D9\\u10D0\\u10DB\\u10D3\\u10D8\\u10E1\",\n    \"\\u10DB\\u10D8\\u10D5\\u10D8\\u10DB\\u10DD\\u10EC\\u10E3\\u10E5\\u10D0\\u10DA\\u10E1\\u10D0\",\n    \"\\u10DB\\u10D6\\u10DA\\u10DD\\u10E1\",\n    \"\\u10DB\\u10DD\\u10D5\\u10DA\\u10D4\\u10EE\\u10D5\\u10D4\",\n    \"\\u10D5\\u10D8\\u10DB\\u10D0\\u10E5\\u10D4\\u10D1\\u10D3\\u10D0\",\n    \"\\u10E2\\u10D0\\u10E2\\u10E0\\u10D4\\u10E1\\u10E2\\u10D8\\u10DC\\u10D8\",\n    \"\\u10DB\\u10DD\\u10D8\\u10D7\\u10E5\\u10DD\\u10D9\\u10D0\",\n    \"\\u10DB\\u10D3\\u10D0\\u10D2\\u10D4\\u10D1\\u10D4\\u10DC\",\n    \"\\u10D5\\u10D8\\u10DB\\u10EA\\u10D4\",\n    \"\\u10E1\\u10D4\\u10D5\\u10D0\",\n    \"\\u10E1\\u10D0\\u10D7\\u10D8\\u10DC\\u10D4\\u10E1\\u10DC\\u10D8\",\n    \"\\u10E1\\u10D0\\u10D3\\u10D2\\u10DB\\u10DD\",\n    \"\\u10D2\\u10D0\\u10E1\\u10E9\\u10D5\\u10D0\\u10D3\\u10D4\\u10D7\",\n    \"\\u10DB\\u10D4\\u10E1\\u10DB\\u10D0\\u10DC\\u10EA\\u10D0\",\n    \"\\u10DB\\u10D8\\u10D5\\u10E1\\u10EA\\u10D0\\u10D5\\u10D4\",\n    \"\\u10EC\\u10D4\\u10D8\\u10D7\\u10DD\",\n    \"\\u10EB\\u10D5\\u10D8\\u10DA\\u10DC\\u10D8\",\n    \"\\u10D2\\u10D0\\u10DB\\u10D8\\u10D6\\u10E0\\u10D8\\u10D0\\u10DC\",\n    \"\\u10D3\\u10D0\\u10D5\\u10D0\\u10D7\\u10E5\\u10D5\\u10D4\\u10DC\\u10DD\",\n    \"\\u10D6\\u10D8\\u10EA\\u10D8\",\n    \"\\u10DB\\u10D8\\u10E1\\u10EA\\u10D4\\u10D3\\u10D8\",\n    \"\\u10DB\\u10DD\\u10DC\\u10D4\\u10D1\\u10D0\\u10DC\\u10D8\",\n    \"\\u10D3\\u10D0\\u10DC\\u10D0\\u10DB\\u10E0\\u10D8\\u10E1\\u10D0\",\n    \"\\u10E1\\u10E0\\u10EA\\u10DD\\u10E2\\u10D8\",\n    \"\\u10F0\\u10E5\\u10DD\\u10DC\\u10D7\\u10D0\\u10D5\\u10D8\\u10E1\\u10D7\\u10D0\\u10DC\",\n    \"\\u10DB\\u10D1\\u10E0\\u10EB\\u10D4\\u10DC\\u10D8\\u10D0\",\n    \"\\u10EC\\u10D0\\u10EE\\u10E1\\u10D8\\u10DA\\u10D7\\u10D0\",\n    \"\\u10DB\\u10D8\\u10EE\\u10E1\\u10D4\\u10DC\\u10D8\\u10D7\",\n    \"\\u10E1\\u10D4\\u10D5\\u10DC\\u10D0\",\n    \"\\u10D2\\u10D0\\u10E0\\u10D3\\u10E3\\u10D9\\u10D5\\u10E0\\u10D8\\u10D3\\u10D3\\u10D0\",\n    \"\\u10DB\\u10D8\\u10D3\\u10D0\\u10DB\\u10DD\\u10D3\\u10D4\\u10E1\",\n    \"\\u10E1\\u10D8\\u10DE\\u10E7\\u10E0\\u10DD\",\n    \"\\u10E8\\u10D4\\u10DB\\u10EC\\u10DD\\u10D5\\u10DA\\u10D8\\u10E1\\u10D0\",\n    \"\\u10DB\\u10D0\\u10DB\\u10D3\\u10D8\\u10F0\\u10EE\\u10DA\\u10D4\\u10D0\\u10DC\",\n    \"\\u10D1\\u10E0\\u10ED\\u10DC\\u10D8\\u10D0\",\n    \"\\u10D3\\u10D0\\u10DC\\u10D4\\u10DC\\u10D0\\u10E2\\u10D0\\u10DC\\u10DC\\u10D8\",\n    \"\\u10E3\\u10D9\\u10E0\\u10D7\\u10D4\\u10D1\\u10DD\\u10D3\\u10D4\\u10DB\\u10DC\\u10D8\",\n    \"\\u10D8\\u10EA\\u10D8\\u10EA\\u10DD\\u10D3\\u10D0\",\n    \"\\u10E1\\u10D0\\u10DB\\u10D0\\u10E2\\u10D0\",\n    \"\\u10E3\\u10E4\\u10E0\\u10DC\\u10D0\",\n    \"\\u10D2\\u10D0\\u10D4\\u10D2\\u10D0\\u10E0\\u10DC\\u10D4\\u10D1\\u10D8\\u10E1\",\n    \"\\u10D3\\u10D0\\u10D5\\u10D4\\u10EF\\u10D0\\u10E0\\u10D4\\u10DC\\u10D0\",\n    \"\\u10DB\\u10E2\\u10D4\\u10DB\\u10E3\\u10E0\\u10E1\\u10D0\",\n    \"\\u10DB\\u10E8\\u10D5\\u10D4\\u10DC\\u10DD\\u10D3\\u10D4\\u10DC\\u10DD\",\n    \"\\u10D2\\u10D8\\u10DB\\u10EB\\u10D8\\u10DB\\u10DC\\u10DD\",\n    \"\\u10E1\\u10D0\\u10DB\\u10D5\\u10D6\\u10D8\\u10DC\\u10DD\",\n    \"\\u10DB\\u10DD\\u10D5\\u10DA\\u10DD\\u10EA\\u10D7\\u10D0\",\n    \"\\u10D2\\u10D8\\u10E8\\u10D5\\u10D8\\u10DA\\u10D0\",\n    \"\\u10D3\\u10D0\\u10D0\\u10DB\\u10ED\\u10D4\\u10D1\\u10D8\\u10DC\",\n    \"\\u10DB\\u10D8\\u10D7\\u10EE\\u10E0\\u10DD\\u10E1\",\n    \"\\u10DB\\u10DF\\u10D0\\u10D5\\u10D0\\u10DA\\u10D8\\u10D0\",\n    \"\\u10DB\\u10E6\\u10E3\\u10E0\\u10D0\",\n    \"\\u10E6\\u10D8\\u10DC\\u10D3\\u10D4\\u10E1\",\n    \"\\u10DB\\u10DD\\u10D0\\u10D2\\u10EE\\u10D4\\u10D1\\u10D0\",\n    \"\\u10D2\\u10D0\\u10D5\\u10D8\\u10EA\\u10D4\\u10EA\\u10EE\\u10DA\\u10D8\",\n    \"\\u10E2\\u10D8\\u10E0\\u10E1\\u10DA\\u10D8\\u10D7\",\n    \"\\u10D2\\u10D0\\u10D5\\u10EC\\u10E7\\u10E0\\u10D4\\u10E2\\u10D0\",\n    \"\\u10DB\\u10E7\\u10D8\\u10D5\\u10DC\\u10D4\\u10DC\",\n    \"\\u10E5\\u10D0\\u10E4\\u10D8\\u10DC\\u10E1\",\n    \"\\u10D1\\u10D0\\u10DC\\u10D2\\u10E1\\u10D0\",\n    \"\\u10E8\\u10D4\\u10DB\\u10DD\\u10EE\\u10D0\\u10DC\\u10D0\",\n    \"\\u10E8\\u10D4\\u10DB\\u10DD\\u10D5\\u10E1\\u10ED\\u10D5\\u10E0\\u10D4\\u10E2\\u10D8\\u10D7\",\n    \"\\u10D0\\u10DB\\u10DD\\u10D5\\u10F0\\u10E6\\u10D4\\u10E0\\u10D7\\u10DD\",\n    \"\\u10DB\\u10DD\\u10EA\\u10D0\\u10D3\\u10D8\\u10D0\",\n    \"\\u10DB\\u10DD\\u10D4\\u10EE\\u10D5\\u10D8\\u10D3\\u10D4\\u10E1\",\n    \"\\u10D7\\u10E5\\u10DB\\u10D8\\u10D0\",\n    \"\\u10D0\\u10E6\\u10D5\\u10D8\\u10D0\",\n    \"\\u10D5\\u10DA\\u10D0\\u10DB\\u10E1\",\n    \"\\u10DB\\u10DD\\u10EE\\u10D3\\u10D8\\u10D0\\u10DC\\u10D4\\u10D1\\u10D8\",\n    \"\\u10D2\\u10DD\\u10E0\\u10E1\\u10D5\\u10DA\\u10D8\\u10D7\\u10D0\",\n    \"\\u10D2\\u10D5\\u10D7\\u10E5\\u10D5\\u10D0\\u10E1\",\n    \"\\u10D2\\u10D0\\u10E3\\u10D6\\u10D0\\u10D3\\u10D0\",\n    \"\\u10D3\\u10D0\\u10D1\\u10D8\\u10D7\\u10E5\\u10D8\\u10E1\",\n    \"\\u10D0\\u10DC\\u10D5\\u10D8\\u10DC\\u10D0\",\n    \"\\u10E8\\u10E0\\u10D8\\u10D3\\u10DD\\u10DC\\u10D8\",\n    \"\\u10D2\\u10D0\\u10D5\\u10EC\\u10D8\\u10D3\\u10DC\\u10D8\\u10D0\",\n    \"\\u10D0\\u10DA\\u10D5\\u10D8\\u10D7\\u10D0\\u10DC\\u10D8\",\n    \"\\u10DB\\u10DD\\u10DC\\u10D8\\u10DD\",\n    \"\\u10E1\\u10D8\\u10E2\\u10D8\\u10E0\\u10D4\\u10DC\",\n    \"\\u10D2\\u10D8\\u10E8\\u10D8\\u10EE\\u10D0\\u10E0\\u10DC\\u10D8\",\n    \"\\u10D3\\u10D0\\u10DB\\u10D8\\u10E4\\u10D4\\u10DB\\u10D8\",\n    \"\\u10DB\\u10D4\\u10D2\\u10E0\\u10D4\\u10EA\\u10D0\",\n    \"\\u10E4\\u10D8\\u10D7\\u10EF\\u10D8\",\n    \"\\u10DB\\u10E1\\u10D3\\u10D4\\u10D5\\u10D0\\u10E0\\u10E1\\u10D0\",\n    \"\\u10D2\\u10D0\\u10DC\\u10D0\\u10D6\\u10D0\\u10DC\\u10D3\\u10D0\",\n    \"\\u10E1\\u10D0\\u10E5\\u10DB\\u10D8\\u10DC\"\n];\n$d90013e23dc65086$var$data.fnames = [\n    \"\\u10D7\\u10D0\\u10D5\\u10D0\\u10DC\",\n    \"\\u10D4\\u10DA\\u10D8\\u10D9\\u10DD\\u10DC\",\n    \"\\u10D9\\u10D0\\u10DC\\u10E2\\u10DA\\u10D8\\u10DD\\u10DC\",\n    \"\\u10D2\\u10D5\\u10D4\\u10DA\\u10D4\",\n    \"\\u10DA\\u10D0\\u10D3\\u10D8\\u10D0\\u10DC\",\n    \"\\u10DA\\u10DD\\u10E2\\u10D8\\u10DC\\u10D4\",\n    \"\\u10D2\\u10D8\\u10DD\\u10DA\\u10D2\\u10D5\\u10D8\",\n    \"\\u10D2\\u10D0\\u10E0\\u10E1\\u10D0\",\n    \"\\u10D7\\u10D4\\u10D3\\u10D0\",\n    \"\\u10DB\\u10D4\\u10D6\\u10DC\\u10D0\\u10DC\",\n    \"\\u10DB\\u10D0\\u10E0\\u10E2\\u10D0\",\n    \"\\u10D0\\u10E3\\u10E0\\u10D0\\u10D6\\u10D2\\u10E0\",\n    \"\\u10DB\\u10D0\\u10D3\\u10E0\\u10D0\",\n    \"\\u10D2\\u10D8\\u10DD\\u10D2\\u10D8\\u10DA\\u10D8\",\n    \"\\u10E1\\u10DD\\u10DC\\u10D8\\u10D9\\u10D4\\u10DA\\u10D8\\u10D6\\u10D0\\u10DC\\u10D8\",\n    \"\\u10D0\\u10E1\\u10E1\\u10D0\\u10DC\\u10DD\",\n    \"\\u10DC\\u10D8\\u10D2\\u10DD\\u10DA\\u10D8\\u10E2\\u10D8\",\n    \"\\u10D0\\u10D5\\u10D0\\u10D9\\u10D5\\u10D0\\u10DC\",\n    \"\\u10DB\\u10DD\\u10DC\\u10E1\",\n    \"\\u10DC\\u10D0\\u10D3\\u10E0\\u10D8\\u10DC\",\n    \"\\u10DC\\u10D8\\u10E4\\u10DD\\u10DA\",\n    \"\\u10D4\\u10DA\\u10D8\\u10D9\\u10DD\\u10E0\",\n    \"\\u10D3\\u10D0\\u10DB\\u10D0\\u10E1\",\n    \"\\u10D2\\u10D8\\u10DB\\u10E0\\u10D8\",\n    \"\\u10DD\\u10D1\\u10D0\\u10E0\\u10EE\\u10D8\",\n    \"\\u10D2\\u10D0\\u10DB\\u10DD\\u10DC\",\n    \"\\u10DD\\u10DC\\u10D4\\u10E1\",\n    \"\\u10D6\\u10D8\\u10EE\\u10E2\\u10D8\\u10DC\\u10D4\",\n    \"\\u10D8\\u10DD\\u10D9\\u10D4\\u10DA\",\n    \"\\u10E1\\u10D0\\u10E2\\u10D3\\u10D0\",\n    \"\\u10DE\\u10D0\\u10E0\\u10D0\",\n    \"\\u10D8\\u10D0\\u10DC\\u10D4\\u10D6\",\n    \"\\u10D6\\u10D8\\u10DC\\u10D0\",\n    \"\\u10E0\\u10D0\\u10DC\\u10D2\\u10D8\",\n    \"\\u10D8\\u10D0\\u10DC\\u10D2\\u10DD\\u10E0\",\n    \"\\u10D0\\u10D1\\u10E1\\u10D8\\u10DC\\u10D4\",\n    \"\\u10DA\\u10D4\\u10DC\\u10E2\\u10D0\\u10DC\",\n    \"\\u10D6\\u10D8\\u10E1\\u10E2\\u10D8\\u10D9\\u10DD\\u10D1\",\n    \"\\u10DC\\u10D8\\u10D2\\u10DD\\u10DA\\u10DD\",\n    \"\\u10D3\\u10D0\\u10E2\\u10D8\\u10D7\\u10DC\\u10D8\",\n    \"\\u10DB\\u10D0\\u10DC\\u10D7\\u10D0\",\n    \"\\u10D0\\u10E0\\u10D2\\u10D8\\u10E5\",\n    \"\\u10D6\\u10D8\\u10D9\\u10DD\",\n    \"\\u10D4\\u10E0\\u10DA\\u10D4\",\n    \"\\u10D8\\u10D0\\u10DC\\u10D4\",\n    \"\\u10DB\\u10D4\\u10D5\\u10E0\\u10D4\\u10DC\",\n    \"\\u10D0\\u10DA\\u10E2\\u10D8\\u10E1\\u10D0\",\n    \"\\u10DB\\u10D0\\u10E0\\u10D3\\u10D8\\u10D0\",\n    \"\\u10E1\\u10D8\\u10E1\\u10D4\\u10DA\",\n    \"\\u10EE\\u10D4\\u10D8\\u10E1\\u10D0\",\n    \"\\u10D4\\u10DA\\u10E3\\u10D0\\u10DC\",\n    \"\\u10D3\\u10D4\\u10DA\\u10DD\",\n    \"\\u10D8\\u10D4\\u10D9\\u10DA\\u10D4\\u10D1\",\n    \"\\u10D2\\u10E3\\u10E9\\u10D8\\u10DA\\u10D8\",\n    \"\\u10E2\\u10D0\\u10DB\\u10D0\",\n    \"\\u10DC\\u10DD\\u10D9\\u10D2\\u10DD\\u10DA\",\n    \"\\u10D8\\u10D0\\u10D9\\u10D8\\u10E1\\u10D4\",\n    \"\\u10D3\\u10D0\\u10D3\\u10DD\",\n    \"\\u10D0\\u10E0\\u10D7\\u10D4\\u10DB\\u10E0\\u10D0\\u10E1\",\n    \"\\u10D0\\u10DC\\u10D0\\u10D8\\u10D9\\u10DD\\u10D1\\u10D4\",\n    \"\\u10D2\\u10E2\\u10D8\\u10E2\",\n    \"\\u10D7\\u10D0\\u10EE\\u10E1\\u10D0\\u10DC\",\n    \"\\u10D6\\u10D0\\u10DC\\u10D0\",\n    \"\\u10DC\\u10E3\\u10D3\\u10DD\",\n    \"\\u10D2\\u10D8\\u10DD\\u10D3\\u10D0\",\n    \"\\u10D8\\u10E1\\u10E1\\u10DA\\u10D8\\u10D9\\u10DD\\u10DC\",\n    \"\\u10D0\\u10DA\\u10E1\\u10D0\\u10DC\",\n    \"\\u10E0\\u10D0\\u10DB\\u10DD\\u10DA\\u10D4\",\n    \"\\u10D2\\u10E3\\u10DB\\u10D0\\u10DC\",\n    \"\\u10DC\\u10E3\\u10E0\\u10DB\\u10D2\\u10D8\\u10DC\",\n    \"\\u10D7\\u10DD\\u10DB\\u10D8\\u10D7\\u10D0\\u10DC\\u10D8\",\n    \"\\u10D3\\u10D4\\u10D5\\u10D0\\u10DC\\u10D4\",\n    \"\\u10D4\\u10DA\\u10D4\\u10D3\\u10D4\\u10D8\\u10DC\",\n    \"\\u10D2\\u10D8\\u10DB\\u10DD\\u10E2\",\n    \"\\u10D0\\u10E0\\u10D0\\u10E0\",\n    \"\\u10DD\\u10E0\\u10DB\\u10DD\\u10DC\",\n    \"\\u10DC\\u10D4\\u10D3\\u10E0\\u10D8\",\n    \"\\u10D3\\u10D8\\u10DB\\u10DD\",\n    \"\\u10EE\\u10DD\\u10D7\\u10D8\\u10D0\\u10DC\\u10D4\\u10D8\",\n    \"\\u10D2\\u10D8\\u10D5\\u10D0\",\n    \"\\u10DC\\u10D0\\u10DC\\u10E2\\u10E0\\u10D4\",\n    \"\\u10D2\\u10D8\\u10DB\\u10DD\\u10DA\",\n    \"\\u10D3\\u10DD\\u10E1\\u10DD\\u10DC\",\n    \"\\u10D8\\u10D9\\u10D0\\u10DC\\u10D4\\u10DC\",\n    \"\\u10D8\\u10D9\\u10E5\\u10DD\\u10E0\\u10D8\\u10D6\\u10D4\",\n    \"\\u10D2\\u10D8\\u10DA\\u10E2\\u10DD\\u10E0\\u10D2\",\n    \"\\u10D3\\u10D4\\u10E2\\u10DD\\u10DC\",\n    \"\\u10D4\\u10E0\\u10D3\\u10D4\\u10D0\",\n    \"\\u10D8\\u10E0\\u10D4\\u10D2\\u10DA\\u10D8\\u10D6\",\n    \"\\u10E0\\u10D8\\u10D3\\u10D4\\u10DA\\u10E3\\u10D3\\u10D0\\u10DC\",\n    \"\\u10D7\\u10DD\\u10D9\\u10D0\\u10DC\",\n    \"\\u10D8\\u10D0\\u10DC\\u10D4\\u10D1\\u10D4\\u10DC\\u10E2\\u10D8\\u10D0\\u10DC\\u10D0\",\n    \"\\u10E1\\u10D8\\u10D1\\u10DD\",\n    \"\\u10D2\\u10D8\\u10DD\\u10E0\\u10E2\\u10D8\\u10DC\",\n    \"\\u10DC\\u10D8\\u10D9\\u10D8\\u10DA\\u10D0\\u10DC\",\n    \"\\u10D4\\u10DA\\u10D0\\u10D9\\u10DD\\u10DC\",\n    \"\\u10D2\\u10D8\\u10D3\\u10E0\\u10D0\\u10D1\",\n    \"\\u10DA\\u10D4\\u10EA\\u10D7\\u10D4\\u10E2\\u10D0\\u10DC\\u10E2\\u10D4\\u10DC\\u10D3\\u10D4\\u10E0\\u10D8\\u10D1\",\n    \"\\u10D3\\u10D0\\u10DB\\u10D4\\u10E0\",\n    \"\\u10D8\\u10D4\\u10D2\\u10DD\"\n];\n$d90013e23dc65086$var$data.lnames = [\n    \"\\u10DB\\u10D0\\u10EE\\u10D0\\u10D3\\u10D4\\u10DC\\u10D8\\u10D0\",\n    \"\\u10D1\\u10E1\\u10D4\\u10DA\\u10E0\\u10D8\\u10D0\",\n    \"\\u10E5\\u10D0\\u10D5\\u10D8\\u10D0\",\n    \"\\u10D9\\u10DD\\u10E0\\u10D4\\u10D9\\u10D8\\u10D0\",\n    \"\\u10DB\\u10D0\\u10E0\\u10D3\\u10D8\\u10D0\",\n    \"\\u10D1\\u10D0\\u10E0\\u10D3\\u10D8\\u10DD\\u10DC\\u10D8\\u10D0\",\n    \"\\u10D2\\u10D5\\u10D8\\u10DE\\u10D8\\u10D0\\u10DC\\u10D3\\u10D8\\u10D0\",\n    \"\\u10D4\\u10E0\\u10D7\\u10D4\\u10DA\\u10D8\\u10D0\",\n    \"\\u10DC\\u10D7\\u10EE\\u10D0\\u10D8\\u10D0\",\n    \"\\u10D7\\u10D4\\u10D3\\u10D8\\u10D0\",\n    \"\\u10D1\\u10DD\\u10EE\\u10D0\\u10D8\\u10D0\",\n    \"\\u10D1\\u10D0\\u10E0\\u10D8\\u10D0\",\n    \"\\u10ED\\u10D0\\u10E0\\u10E2\\u10D8\\u10DC\\u10D8\\u10D0\",\n    \"\\u10D0\\u10E0\\u10DE\\u10D0\\u10DC\\u10D8\\u10D0\",\n    \"\\u10E9\\u10E3\\u10E0\\u10D8\\u10D0\",\n    \"\\u10DB\\u10DD\\u10E0\\u10EA\\u10D0\\u10EC\\u10D0\\u10D6\\u10D8\\u10D0\",\n    \"\\u10D0\\u10E0\\u10DB\\u10D4\\u10DA\\u10D8\\u10D0\",\n    \"\\u10DB\\u10D8\\u10E0\\u10D1\\u10D0\\u10E0\\u10D8\\u10D0\",\n    \"\\u10ED\\u10D5\\u10D4\\u10DA\\u10D0\\u10E5\\u10D8\\u10D0\",\n    \"\\u10E5\\u10D0\\u10E0\\u10D8\\u10D7\\u10D8\\u10D0\",\n    \"\\u10D2\\u10D0\\u10E0\\u10D7\\u10D4\\u10DA\\u10D8\\u10D0\",\n    \"\\u10D8\\u10D0\\u10DC\\u10D8\\u10D0\",\n    \"\\u10D3\\u10D5\\u10D0\\u10DC\\u10E2\\u10DD\\u10DC\\u10D4\\u10D8\\u10D0\\u10DC\\u10D8\\u10D0\",\n    \"\\u10DE\\u10E3\\u10E9\\u10D8\\u10D0\",\n    \"\\u10D3\\u10D0\\u10E2\\u10D8\\u10DA\\u10D8\\u10D0\",\n    \"\\u10D9\\u10D0\\u10DC\\u10D8\\u10D0\",\n    \"\\u10D5\\u10D0\\u10E0\\u10D3\\u10E1\\u10D5\\u10D0\\u10DA\\u10D8\\u10D0\",\n    \"\\u10E7\\u10DD\\u10E0\\u10D7\\u10D4\\u10DA\\u10D8\\u10D0\",\n    \"\\u10D0\\u10E0\\u10D3\\u10DD\\u10DA\\u10D8\\u10D0\",\n    \"\\u10E0\\u10D8\\u10D9\\u10E1\\u10E5\\u10D0\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10D2\\u10D0\\u10DB\\u10D4\\u10E5\\u10DD\\u10DC\\u10D7\\u10D4\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10DA\\u10E3\\u10E9\\u10D0\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10DB\\u10D0\\u10E0\\u10D3\\u10D0\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10DE\\u10D0\\u10D1\\u10D8\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10D0\\u10E0\\u10D1\\u10D4\\u10E0\\u10D4\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10E4\\u10DD\\u10E1\\u10E3\\u10E0\\u10D8\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10D5\\u10D0\\u10EC\\u10DD\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10E9\\u10E0\\u10D8\\u10DA\\u10D8\\u10D0\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10E2\\u10D8\\u10DB\\u10D0\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10DB\\u10D0\\u10D5\\u10D0\\u10DC\\u10D8\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10DB\\u10D0\\u10D3\\u10E1\\u10D8\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10E0\\u10D4\\u10D3\\u10D4\\u10DA\\u10D8\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10D7\\u10D4\\u10D7\\u10D0\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10D2\\u10D0\\u10E0\\u10D0\\u10D5\\u10D0\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10D3\\u10D0\\u10E0\\u10D0\\u10EE\\u10D0\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10D1\\u10D0\\u10E0\\u10ED\\u10D0\\u10DB\\u10D8\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10D1\\u10D0\\u10E0\\u10D0\\u10EE\\u10D0\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10D0\\u10DC\\u10E6\\u10D4\\u10DA\\u10D8\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10DB\\u10D4\\u10D1\\u10D0\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10E1\\u10E3\\u10E0\\u10D4\\u10EF\\u10D8\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10D0\\u10D9\\u10D1\\u10D7\\u10D0\\u10D9\\u10D8\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10E2\\u10E3\\u10E1\\u10DD\\u10DC\\u10D8\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10E2\\u10DD\\u10D3\\u10D4\\u10E0\\u10D0\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10D6\\u10D0\\u10D1\\u10EE\\u10D0\\u10E1\\u10D8\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10E5\\u10E3\\u10E0\\u10D0\\u10D1\\u10D4\\u10E0\\u10D8\\u10DC\\u10D8\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10D4\\u10D1\\u10D5\\u10D4\\u10D9\\u10D0\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10D4\\u10E0\\u10D3\\u10D8\\u10D7\\u10D0\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10E3\\u10E0\\u10D1\\u10D4\\u10DA\\u10D8\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10DB\\u10D4\\u10DC\\u10E0\\u10DB\\u10D0\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\",\n    \"\\u10EF\\u10D5\\u10D8\\u10DA\\u10DD\\u10EB\\u10D4\",\n    \"\\u10D1\\u10D0\\u10D3\\u10D8\\u10D0\\u10EB\\u10D4\",\n    \"\\u10E8\\u10D5\\u10D8\\u10E0\\u10D8\\u10EB\\u10D4\",\n    \"\\u10E1\\u10D0\\u10E1\\u10D0\\u10DC\\u10D0\\u10EB\\u10D4\",\n    \"\\u10D2\\u10D8\\u10DB\\u10D0\\u10D0\\u10DC\\u10D8\\u10EB\\u10D4\",\n    \"\\u10D2\\u10D5\\u10D0\\u10DB\\u10D0\\u10D5\\u10D8\\u10EB\\u10D4\",\n    \"\\u10D0\\u10E0\\u10DB\\u10D4\\u10DB\\u10D8\\u10EB\\u10E1\\u10EB\\u10D4\",\n    \"\\u10D1\\u10D0\\u10E0\\u10D0\\u10EB\\u10D4\",\n    \"\\u10D0\\u10D1\\u10D4\\u10D0\\u10DC\\u10D8\\u10EB\\u10D4\",\n    \"\\u10DD\\u10D5\\u10DD\\u10DC\\u10D8\\u10EB\\u10D4\",\n    \"\\u10DA\\u10D0\\u10DB\\u10D0\\u10E8\\u10D5\\u10D8\\u10EB\\u10D4\",\n    \"\\u10DD\\u10D1\\u10D7\\u10D0\\u10EE\\u10E3\\u10E0\\u10D0\\u10EB\\u10D4\",\n    \"\\u10D9\\u10D4\\u10E0\\u10D4\\u10EB\\u10D4\",\n    \"\\u10E4\\u10D5\\u10D4\\u10E0\\u10D8\\u10EB\\u10D4\",\n    \"\\u10DB\\u10D0\\u10D2\\u10D8\\u10EB\\u10D4\",\n    \"\\u10D9\\u10D0\\u10D3\\u10D8\\u10D0\\u10E8\\u10D8\\u10EB\\u10D4\",\n    \"\\u10D2\\u10D0\\u10DB\\u10E1\\u10D0\\u10DC\\u10D8\\u10EB\\u10D4\",\n    \"\\u10DB\\u10D4\\u10E0\\u10E2\\u10D8\\u10DC\\u10D8\\u10EB\\u10D4\",\n    \"\\u10D1\\u10D4\\u10DB\\u10D4\\u10D4\\u10DA\\u10D8\\u10EB\\u10D4\",\n    \"\\u10E2\\u10DD\\u10EE\\u10D8\\u10EB\\u10D4\",\n    \"\\u10ED\\u10D0\\u10E0\\u10D0\\u10E2\\u10D8\\u10EB\\u10D4\",\n    \"\\u10D1\\u10D0\\u10D3\\u10DD\\u10E1\\u10D4\\u10DA\\u10D8\",\n    \"\\u10D5\\u10D0\\u10E0\\u10D8\\u10E1\\u10D4\\u10DA\\u10D8\",\n    \"\\u10E1\\u10D8\\u10E0\\u10EE\\u10D4\\u10DA\\u10D8\",\n    \"\\u10E1\\u10DD\\u10E0\\u10EE\\u10D4\\u10DA\\u10D8\",\n    \"\\u10DB\\u10D0\\u10E0\\u10D3\\u10D4\\u10DA\\u10D8\",\n    \"\\u10D2\\u10D0\\u10E8\\u10D5\\u10D8\\u10D7\\u10D4\\u10DA\\u10D8\",\n    \"\\u10D9\\u10DD\\u10D7\\u10D0\\u10D5\\u10D4\\u10DA\\u10D8\",\n    \"\\u10DD\\u10E1\\u10D7\\u10DB\\u10D8\\u10DC\\u10D4\\u10DA\\u10D8\",\n    \"\\u10D4\\u10E0\\u10D8\\u10E1\\u10D4\\u10DA\\u10D8\",\n    \"\\u10D6\\u10D7\\u10D4\\u10E0\\u10E2\\u10D4\\u10DA\\u10D8\",\n    \"\\u10EE\\u10D0\\u10DB\\u10D8\\u10D9\\u10D4\\u10DA\\u10D8\",\n    \"\\u10DB\\u10D8\\u10D1\\u10D0\\u10EB\\u10D4\\u10E8\\u10D8\\u10D4\\u10DA\\u10D8\",\n    \"\\u10D8\\u10D9\\u10D7\\u10D4\\u10DA\\u10D8\",\n    \"\\u10D2\\u10D7\\u10EA\\u10D8\\u10E2\\u10D0\\u10D1\\u10D4\\u10DA\\u10D8\",\n    \"\\u10D0\\u10E1\\u10D8\\u10EA\\u10D4\\u10DA\\u10D8\",\n    \"\\u10DD\\u10D1\\u10D0\\u10D8\\u10ED\\u10D4\\u10DA\\u10D8\",\n    \"\\u10DA\\u10D4\\u10DC\\u10D7\\u10D4\\u10DA\\u10D8\",\n    \"\\u10DB\\u10D4\\u10DB\\u10E9\\u10D0\\u10D7\\u10D4\\u10E0\\u10D8\\u10DC\\u10DD\\u10DC\\u10D2\\u10D1\\u10D0\\u10DC\\u10D8\\u10DC\\u10D8\\u10EB\\u10D4\",\n    \"\\u10D0\\u10DB\\u10D4\\u10D3\\u10D5\\u10D0\\u10E5\\u10E1\\u10D8\\u10D9\\u10DD\\u10D2\\u10D4\\u10D8\\u10E8\\u10D5\\u10D8\\u10E0\\u10D8\",\n    \"\\u10DB\\u10DD\\u10E0\\u10DF\\u10D5\\u10DD\\u10DC\\u10D0\\u10DC\\u10D3\\u10D8\\u10E8\\u10D5\\u10D8\\u10DA\\u10D8\"\n];\nlet $d90013e23dc65086$var$dataset = $d90013e23dc65086$var$data.vefxwords;\nconst $d90013e23dc65086$var$freqs = $d90013e23dc65086$var$data.frequency.summed;\nconst $d90013e23dc65086$var$loadWordlist = (wordlist)=>{\n    $d90013e23dc65086$var$dataset = wordlist;\n};\nconst $d90013e23dc65086$var$sentences = (nwords)=>{\n    return $d90013e23dc65086$var$createSentences($d90013e23dc65086$var$createWords(nwords));\n};\nconst $d90013e23dc65086$var$paragraphs = (nwords, npar, newline = \"\\n\\n\")=>{\n    let paragraphs = \"\";\n    for(let i = 0; i < npar; i++)paragraphs += $d90013e23dc65086$var$createSentences($d90013e23dc65086$var$createWords(nwords)) + newline;\n    return paragraphs;\n};\nconst $d90013e23dc65086$var$createSentences = (words)=>{\n    let sentences = \"\";\n    for(let i = 0; i < words.length; i++)sentences += words[i] + $d90013e23dc65086$var$randomMark();\n    sentences = sentences.trim();\n    sentences = sentences.setCharAt(sentences.length - 1, \".\", 1);\n    return sentences;\n};\nconst $d90013e23dc65086$var$names = (nnames)=>{\n    let results = [];\n    for(let i = 0; i < nnames; i++)results.push($d90013e23dc65086$var$randomFirstName() + \" \" + $d90013e23dc65086$var$randomLastName());\n    return results;\n};\nconst $d90013e23dc65086$var$randomFirstName = ()=>{\n    return $d90013e23dc65086$var$data.fnames[$d90013e23dc65086$var$randomNumber(0, $d90013e23dc65086$var$data.fnames.length)];\n};\nconst $d90013e23dc65086$var$randomLastName = ()=>{\n    return $d90013e23dc65086$var$data.lnames[$d90013e23dc65086$var$randomNumber(0, $d90013e23dc65086$var$data.lnames.length)];\n};\nString.prototype.setCharAt = function(where, what, offset) {\n    offset = offset || 0;\n    if (where > this.length - 1) return this;\n    return this.substring(0, where) + what + this.substring(where + what.length + offset);\n};\nconst $d90013e23dc65086$var$randomMark = ()=>{\n    let r = Math.random();\n    for(let i = 0; i < $d90013e23dc65086$var$freqs.length; i++){\n        if (r < $d90013e23dc65086$var$freqs[i][1]) return $d90013e23dc65086$var$freqs[i][0] + \" \";\n    }\n    return \" \";\n};\nconst $d90013e23dc65086$var$randomWord = ()=>{\n    return $d90013e23dc65086$var$dataset[$d90013e23dc65086$var$randomNumber(0, $d90013e23dc65086$var$dataset.length)];\n};\nconst $d90013e23dc65086$var$createWords = (nwords)=>{\n    let words = [];\n    for(let i = 0; i < nwords; i++)words.push($d90013e23dc65086$var$randomWord());\n    return words;\n};\n// Random number [min, max)\nconst $d90013e23dc65086$var$randomNumber = (min, max)=>{\n    return Math.floor(Math.random() * (max - min) + min);\n};\nconst $d90013e23dc65086$var$$ = {\n    randomFirstName: $d90013e23dc65086$var$randomFirstName,\n    randomLastName: $d90013e23dc65086$var$randomLastName,\n    randomWord: $d90013e23dc65086$var$randomWord\n};\nvar $d90013e23dc65086$export$2e2bcd8739ae039 = {\n    sentences: $d90013e23dc65086$var$sentences,\n    paragraphs: $d90013e23dc65086$var$paragraphs,\n    loadWordlist: $d90013e23dc65086$var$loadWordlist,\n    names: $d90013e23dc65086$var$names,\n    $: $d90013e23dc65086$var$$\n};\n\n\nconst $a0e4f0024471c2bc$var$frequency = (text, miss = \"[\\u10D0-\\u10F0\\u1C90-\\u1CB0\\u10A0-\\u10C0\\u2D00-\\u2D20a-zA-Z\\u0410-\\u042F\\u0430-\\u044F]\")=>{\n    let splitted = text.toUpperCase().split(\"\");\n    let length = splitted.length;\n    let table = {};\n    let r = new RegExp(miss);\n    for(let i = 0; i < length; i++){\n        if (!r.test(splitted[i])) continue;\n        if (!table[splitted[i]]) table[splitted[i]] = 1;\n        else table[splitted[i]]++;\n    }\n    for(let key in table)table[key] /= length;\n    return table;\n};\nconst $a0e4f0024471c2bc$var$count = (text, miss = \"[\\u10D0-\\u10F0\\u1C90-\\u1CB0\\u10A0-\\u10C0\\u2D00-\\u2D20a-zA-Z\\u0410-\\u042F\\u0430-\\u044F]\")=>{\n    let splitted = text.toUpperCase().split(\"\");\n    let length = splitted.length;\n    let table = {};\n    let r = new RegExp(miss);\n    for(let i = 0; i < length; i++){\n        if (!r.test(splitted[i])) continue;\n        if (!table[splitted[i]]) table[splitted[i]] = 1;\n        else table[splitted[i]]++;\n    }\n    return table;\n};\nconst $a0e4f0024471c2bc$var$friedman = (text, miss = \"[\\u10D0-\\u10F0\\u1C90-\\u1CB0\\u10A0-\\u10C0\\u2D00-\\u2D20a-zA-Z\\u0410-\\u042F\\u0430-\\u044F]\")=>{\n    let table = $a0e4f0024471c2bc$var$count(text, miss);\n    let sum = 0;\n    let total = 0;\n    for(let key in table){\n        sum += table[key] * (table[key] - 1);\n        total += table[key];\n    }\n    return total > 1 ? sum / (total * (total - 1)) : 0;\n};\nvar $a0e4f0024471c2bc$export$2e2bcd8739ae039 = {\n    friedman: $a0e4f0024471c2bc$var$friedman,\n    frequency: $a0e4f0024471c2bc$var$frequency,\n    count: $a0e4f0024471c2bc$var$count\n};\n\n\n\n\n(0, $821ec095051e6a95$export$2e2bcd8739ae039).$ = {\n    classifyText: (0, $73643bc0a02e5d79$export$2e2bcd8739ae039).classifyText\n};\nlet $1a281e31534456e0$var$scripts = Object.keys((0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).alphabets).slice(0, 4).concat([\n    \"khutsuri\",\n    \"shanidziseuli\",\n    \"tfileliseuli\",\n    \"anbanismtavruli\"\n]).concat(Object.keys((0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).alphabets).slice(4));\n// Convenience module \nlet $1a281e31534456e0$export$555508cbc6add439 = {\n    letters: {\n        mkhedruli: (0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).alphabets.mkhedruli.join(\"\"),\n        asomtavruli: (0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).alphabets.asomtavruli.join(\"\"),\n        nuskhuri: (0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).alphabets.nuskhuri.join(\"\"),\n        mtavruli: (0, $d1f00b498fd37dc9$export$2e2bcd8739ae039).alphabets.mtavruli.join(\"\")\n    },\n    keys: $1a281e31534456e0$var$scripts,\n    caps: (text)=>(0, $821ec095051e6a95$export$2e2bcd8739ae039).convert(text, \"mkhedruli\", \"mtavruli\"),\n    bicam: (text)=>(0, $821ec095051e6a95$export$2e2bcd8739ae039).convert(text, \"mkhedruli\", \"shanidziseuli\"),\n    bicaps: (text)=>(0, $821ec095051e6a95$export$2e2bcd8739ae039).convert(text, \"mkhedruli\", \"anbanismtavruli\")\n};\n// Abstract anbani\nconst $1a281e31534456e0$var$anbani = {\n    core: $821ec095051e6a95$export$2e2bcd8739ae039,\n    lorem: $d90013e23dc65086$export$2e2bcd8739ae039,\n    toolkit: $a0e4f0024471c2bc$export$2e2bcd8739ae039,\n    data: $d1f00b498fd37dc9$export$2e2bcd8739ae039,\n    utils: $73643bc0a02e5d79$export$2e2bcd8739ae039,\n    ab: $1a281e31534456e0$export$555508cbc6add439\n};\nvar $1a281e31534456e0$export$2e2bcd8739ae039 = $1a281e31534456e0$var$anbani;\n\n\nvar $e73bf42412feb220$var$inputArea, $e73bf42412feb220$var$debugEl;\nfunction $e73bf42412feb220$var$debugMsg(msg) {\n    $e73bf42412feb220$var$debugEl.innerHTML = msg + (msg.length > 50 ? \"...\" : \"\");\n}\nString.prototype.toElement = function() {\n    var template = document.createElement(\"template\");\n    var html = this.trim(); // Never return a text node of whitespace as the result\n    template.innerHTML = html;\n    return template.content.firstChild;\n};\nfunction $e73bf42412feb220$var$inputListener() {\n    let inputText = \"\\u10D2\\u10D0\\u10DB\\u10D0\\u10E0\\u10EF\\u10DD\\u10D1\\u10D0\";\n    if ($e73bf42412feb220$var$inputArea.value != \"\") inputText = $e73bf42412feb220$var$inputArea.value;\n    let scripts = Object.keys((0, $1a281e31534456e0$export$2e2bcd8739ae039).data.alphabets);\n    let georgian = (0, $1a281e31534456e0$export$2e2bcd8739ae039).core.interpret(inputText, \"mkhedruli\");\n    scripts.forEach((script)=>{\n        document.querySelector(`#${script}Btn`).innerHTML = (0, $1a281e31534456e0$export$2e2bcd8739ae039).core.convert(georgian, \"mkhedruli\", script);\n    });\n}\nfunction $e73bf42412feb220$var$copyWithAPI(e) {\n    let content = e.target.innerHTML;\n    navigator.clipboard.writeText(content).catch((e)=>{\n        console.log(\"\\u10D0\\u10E1\\u10D4 \\u10D5\\u10D4\\u10E0 \\u10D2\\u10D0\\u10D5\\u10E4\\u10E0\\u10D8\\u10DC\\u10D3\\u10D4\\u10D1\\u10D8\\u10D7\", e);\n    });\n}\nfunction $e73bf42412feb220$var$copyWithExec(e) {\n    let content = e.target.innerHTML;\n    const area = document.createElement(\"textarea\");\n    document.body.appendChild(area);\n    area.value = content;\n    area.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(area);\n}\nfunction $e73bf42412feb220$var$copy(e) {\n    if (navigator.clipboard) $e73bf42412feb220$var$copyWithExec(e);\n    else $e73bf42412feb220$var$copyWithExec(e);\n    $e73bf42412feb220$var$debugMsg(\"\\u10E2\\u10D4\\u10E5\\u10E1\\u10E2\\u10D8 \\u10D9\\u10DD\\u10DE\\u10D8\\u10E0\\u10D4\\u10D1\\u10E3\\u10DA\\u10D8\\u10D0 \\u10FB \" + e.target.innerHTML.slice(0, 30));\n}\nwindow.addEventListener(\"DOMContentLoaded\", (event)=>{\n    window.copy = $e73bf42412feb220$var$copy;\n    window.anbani = (0, $1a281e31534456e0$export$2e2bcd8739ae039);\n    $e73bf42412feb220$var$inputArea = document.querySelector(\"#inputArea\");\n    $e73bf42412feb220$var$debugEl = document.querySelector(\"#debug\");\n    $e73bf42412feb220$var$inputArea.addEventListener(\"input\", $e73bf42412feb220$var$inputListener);\n});\n\n\n//# sourceMappingURL=index.f9c235b7.js.map\n","import anbani from \"anbani\";\n\nvar inputArea, debugEl;\n\nfunction debugMsg(msg) {\n    debugEl.innerHTML = msg + (msg.length > 50 ? \"...\" : \"\")\n}\n\nString.prototype.toElement = function () {\n    var template = document.createElement(\"template\");\n    var html = this.trim(); // Never return a text node of whitespace as the result\n    template.innerHTML = html;\n    return template.content.firstChild;\n};\n\nfunction inputListener() {\n    let inputText = \"გამარჯობა\"\n    if (inputArea.value != \"\")\n        inputText = inputArea.value\n\n    let scripts = Object.keys(anbani.data.alphabets);\n    let georgian = anbani.core.interpret(\n        inputText,\n        \"mkhedruli\"\n    );\n    \n    scripts.forEach((script) => {\n        document.querySelector(`#${script}Btn`).innerHTML = anbani.core.convert(\n            georgian,\n            \"mkhedruli\",\n            script\n        );\n    });\n    \n}\n\nfunction copyWithAPI(e) {\n    let content = e.target.innerHTML;\n\n    navigator.clipboard.writeText(content).catch(e => {\n        console.log('ასე ვერ გავფრინდებით', e);\n    })\n\n}\n\nfunction copyWithExec(e) {\n    let content = e.target.innerHTML\n    const area = document.createElement('textarea');\n    document.body.appendChild(area);\n    area.value = content;\n    area.select();\n    document.execCommand('copy');\n    document.body.removeChild(area);\n}\n\nfunction copy(e) {\n    if (navigator.clipboard) copyWithExec(e)\n    else copyWithExec(e)\n    debugMsg(\"ტექსტი კოპირებულია ჻ \" + e.target.innerHTML.slice(0,30))\n}\n\nwindow.addEventListener(\"DOMContentLoaded\", (event) => {\n\n    window.copy = copy\n    window.anbani = anbani\n\n    inputArea = document.querySelector(\"#inputArea\");\n    debugEl = document.querySelector(\"#debug\");\n    inputArea.addEventListener(\"input\", inputListener)\n});","import core from \"./lib/core.mjs\";\nimport lorem from \"./lib/lorem.mjs\";\nimport toolkit from \"./lib/toolkit.mjs\";\nimport data from \"./lib/data.mjs\";\nimport utils from \"./lib/utils.mjs\";\n\ncore.$ = {classifyText : utils.classifyText}\nlet scripts = Object.keys(data.alphabets).slice(0,4)\n    .concat([\"khutsuri\", \"shanidziseuli\", \"tfileliseuli\", \"anbanismtavruli\"])\n    .concat(Object.keys(data.alphabets).slice(4));\n\n// Convenience module \nlet ab = {\n    letters : {\n        mkhedruli: data.alphabets.mkhedruli.join(''),\n        asomtavruli: data.alphabets.asomtavruli.join(''),\n        nuskhuri: data.alphabets.nuskhuri.join(''),\n        mtavruli: data.alphabets.mtavruli.join(''),\n    },\n\n    keys : scripts,\n    \n    caps : (text) => core.convert(text, \"mkhedruli\", \"mtavruli\"),\n    bicam : (text) => core.convert(text, \"mkhedruli\", \"shanidziseuli\"),\n    bicaps : (text) => core.convert(text, \"mkhedruli\", \"anbanismtavruli\"),\n}\n\n// Abstract anbani\nconst anbani = {\n    core, lorem, toolkit, data, utils, ab\n};\n\n\nexport {core, lorem, toolkit, data, utils, ab}\nexport default anbani\n","import data from \"./data.mjs\";\nimport { checkForAliases, classifyText, checkForDirection, isBicameral, toUpperCase, detectAlphabet } from \"./utils.mjs\";\n\n\nconst convert = (str, from, to) => {\n    let dir = { from, to }\n    checkForAliases(dir)\n    checkForDirection(dir)\n    return safeConvert(str, dir.from, dir.to)\n}\n\nconst interpret = (str, to) => {\n    let dir = { to }\n    checkForAliases(dir)\n    if (str != null)\n        if (isBicameral(dir.to))\n            return convertBicameral(str, detectAlphabet(str, str.length - 1), dir.to);\n        else\n            return convertUnicameral(str, detectAlphabet(str, str.length - 1), dir.to);\n}\n\nconst convertUnicameral = (str, from, to) => {\n    let converted = \"\";\n    for (let i = 0, len = str.length; i < len; i++) {\n        let key = data.alphabets[to][data.alphabets[from].indexOf(str[i])];\n        converted += key === undefined ? str[i] : key;\n    }\n    return converted;\n}\n\nconst convertBicameral = (str, from, to) => {\n    const rules = {\n        \"anbanismtavruli\": {\n            upper: \"asomtavruli\",\n            lower: \"mtavruli\"\n        },\n\n        \"tfileliseuli\": {\n            upper: \"mtavruli\",\n            lower: \"mkhedruli\"\n        },\n\n        \"shanidziseuli\": {\n            upper: \"asomtavruli\",\n            lower: \"mkhedruli\"\n        },\n\n        \"khutsuri\": {\n            upper: \"asomtavruli\",\n            lower: \"nuskhuri\"\n        }\n    }\n\n    let upperScript = rules[to].upper;\n    let lowerScript = rules[to].lower;\n\n    let converted = \"\";\n    for (let i = 0, len = str.length; i < len; i++) {\n        let key = data.alphabets[lowerScript][data.alphabets[from].indexOf(str[i])];\n        converted += key === undefined ? str[i] : key;\n    }\n\n    // First Letter\n    converted = toUpperCase(converted, lowerScript, upperScript);\n\n    // Letters after punctuation \n    let matched = converted.match(/[?.!]\\s+[A-zႠ-ჰⴀ-ⴠᲐ-Ჰ0-9]/g);\n    if (matched != null)\n        for (let i = 0; i < matched.length; i++) {\n            converted = converted.setCharAt(\n                converted.indexOf(matched[i]),\n                matched[i].substring(0, matched[i].length - 1)\n                    .concat(toUpperCase(\n                        matched[i][matched[i].length - 1],\n                        lowerScript,\n                        upperScript\n                    ))\n            );\n        }\n\n    // Letters after special character ' apostrophe\n    matched = converted.match(/[Ⴀ-ჰⴀ-ⴠᲐ-Ჰ]\\'/g);\n    if (matched != null)\n        for (let i = 0; i < matched.length; i++) {\n            converted = converted.setCharAt(\n                converted.indexOf(matched[i]), \n                toUpperCase(matched[i][0], lowerScript, upperScript),\n            1);\n        }\n\n    return converted;\n}\n\nconst safeConvert = (str, from, to) => {\n    if (str != null)\n        if (!isBicameral(to))\n            return convertUnicameral(str, from, to);\n        else\n            return convertBicameral(str, from, to);\n}\n\nexport { convert, interpret, convertUnicameral, convertBicameral, safeConvert }\n\nexport default {\n    convert,\n    interpret,\n    $: classifyText\n};","export default {\n\n    alphabets: {\n        // Modern unicameral Georgian script developed in 10th century \n        // ან ბან გან დონ ენ ვინ ზენ თან ინ კან ლას მან ნარ ონ პარ ჟან რაე სან ტარ უნ ფარ ქან ღან ყარ შინ ჩინ ცან ძილ წილ ჭარ ხან ჯან ჰაე\n        names: [\n            \"ან\", \"ბან\", \"გან\", \"დონ\", \"ენ\", \"ვინ\", \"ზენ\", \"თან\", \"ინ\", \"კან\", \"ლას\",\n            \"მან\", \"ნარ\", \"ონ\", \"პარ\", \"ჟან\", \"რაე\", \"სან\", \"ტარ\", \"უნ\", \"ფარ\", \"ქან\",\n            \"ღან\", \"ყარ\", \"შინ\", \"ჩინ\", \"ცან\", \"ძილ\", \"წილ\", \"ჭარ\", \"ხან\", \"ჯან\", \"ჰაე\",\n            \"ეჲ\", \"ჲე\", \"ჳე\", \"ჴარ\", \"ჰოე\",\n            \"ჶი\", \"ჷნ\", \"ჸინ\", \"გან ამოტრიალებული\", \"აინ ამოტრიალებული\",\n            \"გამყოფი\", \"ნარ მოდიფიკატორი\", \"აენ\", \"სიმაგრის ნიშანი\", \"ლაბიალიზაციის ნიშანი\",\n            \"ა-უმლაუტი\", \"ა-მაკრონი\", \"ა-მაკრონ-უმლაუტი\", \"ე-მაკრონი\", \"ი-მაკრონი\",\n            \"ო-უმლაუტი\", \"ო-მაკრონი\", \"ო-მაკრონ-უმლაუტი\", \"უ-უმლაუტი\", \"უ-მაკრონი\",\n            \"უ-მაკრონ-უმლაუტი\", \"უ-ბრჯგუ\", \"ჷნ-მაკრონი\",\n\n        ],\n\n        // Modern unicameral Georgian script developed in 10th century \n        mkhedruli: [\n            \"ა\", \"ბ\", \"გ\", \"დ\", \"ე\", \"ვ\", \"ზ\", \"თ\", \"ი\", \"კ\", \"ლ\",\n            \"მ\", \"ნ\", \"ო\", \"პ\", \"ჟ\", \"რ\", \"ს\", \"ტ\", \"უ\", \"ფ\", \"ქ\",\n            \"ღ\", \"ყ\", \"შ\", \"ჩ\", \"ც\", \"ძ\", \"წ\", \"ჭ\", \"ხ\", \"ჯ\", \"ჰ\",\n            \"ჱ\", \"ჲ\", \"ჳ\", \"ჴ\", \"ჵ\",\n            \"ჶ\", \"ჷ\", \"ჸ\", \"ჹ\", \"ჺ\",\n            \"჻\", \"ჼ\", \"ჽ\", \"ჾ\", \"ჿ\",\n            \"ა̈\", \"ა̄\", \"ა̄̈\", \"ე̄\", \"ი̄\",\n            \"ო̈\", \"ო̄\", \"ო̄̈\", \"უ̈\", \"უ̄\",\n            \"უ̄̈\", \"უ̂\", \"ჷ̄\",\n        ],\n\n        // Modern unicameral derivative script of Mkhedruli only used for headlines in all-caps\n        mtavruli: [\n            \"Ა\", \"Ბ\", \"Გ\", \"Დ\", \"Ე\", \"Ვ\", \"Ზ\", \"Თ\", \"Ი\", \"Კ\", \"Ლ\",\n            \"Მ\", \"Ნ\", \"Ო\", \"Პ\", \"Ჟ\", \"Რ\", \"Ს\", \"Ტ\", \"Უ\", \"Ფ\", \"Ქ\",\n            \"Ღ\", \"Ყ\", \"Შ\", \"Ჩ\", \"Ც\", \"Ძ\", \"Წ\", \"Ჭ\", \"Ხ\", \"Ჯ\", \"Ჰ\",\n            \"Ჱ\", \"Ჲ\", \"Ჳ\", \"Ჴ\", \"Ჵ\",\n            \"Ჶ\", \"Ჷ\", \"Ჸ\", \"Ჹ\", \"Ჺ\",\n            \"\", \"\", \"Ჽ\", \"Ჾ\", \"Ჿ\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\",\n        ],\n\n        // Original Georgian alphabet from 5th century\n        asomtavruli: [\n            \"Ⴀ\", \"Ⴁ\", \"Ⴂ\", \"Ⴃ\", \"Ⴄ\", \"Ⴅ\", \"Ⴆ\", \"Ⴇ\", \"Ⴈ\", \"Ⴉ\", \"Ⴊ\",\n            \"Ⴋ\", \"Ⴌ\", \"Ⴍ\", \"Ⴎ\", \"Ⴏ\", \"Ⴐ\", \"Ⴑ\", \"Ⴒ\", \"Ⴓ\", \"Ⴔ\", \"Ⴕ\",\n            \"Ⴖ\", \"Ⴗ\", \"Ⴘ\", \"Ⴙ\", \"Ⴚ\", \"Ⴛ\", \"Ⴜ\", \"Ⴝ\", \"Ⴞ\", \"Ⴟ\", \"Ⴠ\",\n            \"Ⴡ\", \"Ⴢ\", \"Ⴣ\", \"Ⴤ\", \"Ⴥ\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\",\n        ],\n\n        // Second script of Georgian alphabet first appearing in 9th century\n        nuskhuri: [\n            \"ⴀ\", \"ⴁ\", \"ⴂ\", \"ⴃ\", \"ⴄ\", \"ⴅ\", \"ⴆ\", \"ⴇ\", \"ⴈ\", \"ⴉ\", \"ⴊ\",\n            \"ⴋ\", \"ⴌ\", \"ⴍ\", \"ⴎ\", \"ⴏ\", \"ⴐ\", \"ⴑ\", \"ⴒ\", \"ⴓ\", \"ⴔ\", \"ⴕ\",\n            \"ⴖ\", \"ⴗ\", \"ⴘ\", \"ⴙ\", \"ⴚ\", \"ⴛ\", \"ⴜ\", \"ⴝ\", \"ⴞ\", \"ⴟ\", \"ⴠ\",\n            \"ⴡ\", \"ⴢ\", \"ⴣ\", \"ⴤ\", \"ⴥ\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\",\n        ],\n\n        // Collection of letters from all around the world that resemble Mkhedruli\n        homoglyph: [\n            \"ⴢ\", \"ձ\", \"ଌ\", \"ᕦ\", \"၅\", \"ᧆ\", \"୫\", \"ᦎ\", \"\\u200Eᦵ\", \"૩\", \"ⴝ\",\n            \"ⴋ\", \"চ\", \"ᦂ\", \"Ჴ\", \"ળ\", \"ᦝ\", \"ᒑ\", \"கு\", \"᧗\", \"ᦀ\", \"ⴕ\",\n            \"ⴜ\", \"ᧇ\", \"𑇤\", \"ⴌ\", \"ઉ\", \"ᑻ\", \"წ\", \"ჭ\", \"ᕹ\", \"ⴟ\", \"Ჱ\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\",\n        ],\n\n        // Zalgo crazy text using diacritics\n        // zalgo : [],\n\n        // International Phonetic Association (IPA) \n        phonetic: [\n            \"ɑ\", \"b\", \"g\", \"d\", \"ɛ\", \"v\", \"z\", \"tʰ\", \"i\", \"k'\", \"l\",\n            \"m\", \"n\", \"ɔ\", \"p'\", \"ʒ\", \"r\", \"s\", \"t'\", \"u\", \"pʰ\", \"kʰ\",\n            \"ʁ\", \"q'\", \"ʃ\", \"t͡ʃ\", \"t͡s\", \"d͡z\", \"t͡sʼ\", \"t͡ʃʼ\", \"χ\", \"d͡ʒ\", \"h\",\n            \"eɪ\", \"j\", \"w\", \"qʰ\", \"oː\",\n            \"f\", \"ə\", \"ʔ\", \"ɢ\", \"ʕ\",\n            \"\", \"◌̃\", \"ə\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\",\n        ],\n\n        // Commonly adopted romanization as seen on social media\n        common: [\n            \"a\", \"b\", \"g\", \"d\", \"e\", \"v\", \"z\", \"t\", \"i\", \"k\", \"l\",\n            \"m\", \"n\", \"o\", \"p\", \"zh\", \"r\", \"s\", \"t\", \"u\", \"f\", \"q\",\n            \"gh\", \"y\", \"sh\", \"ch\", \"c\", \"dz\", \"ts\", \"tch\", \"x\", \"j\", \"h\",\n            \"e\", \"i\", \"ui\", \"x\", \"hoi\",\n            \"f\", \"oa\", \"h\", \"gh\", \"rgh\",\n            \"\", \"\", \"oa\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\",\n        ],\n\n        // Georgian alphabet cyrillization \n        cyrillic: [\n            \"а\", \"б\", \"г\", \"д\", \"е\", \"в\", \"з\", \"т\", \"и\", \"к\", \"л\",\n            \"м\", \"н\", \"о\", \"п\", \"ж\", \"р\", \"с\", \"т\", \"у\", \"ф\", \"к\",\n            \"г\", \"к\", \"ш\", \"ч\", \"ц\", \"дз\", \"тц\", \"тч\", \"х\", \"дж\", \"х\",\n            \"е\", \"й\", \"уй\", \"х\", \"хо\",\n            \"ф\", \"оа\", \"х\", \"г\", \"рг\",\n            \"\", \"\", \"оа\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\",\n        ],\n\n        // Georgian alphabet hellenization \n        greek: [\n            \"α\", \"μπ\", \"γγ\", \"ντ\", \"ε\", \"β\", \"ζ\", \"τ\", \"η\", \"κ\", \"λ\",\n            \"μ\", \"ν\", \"ο\", \"π\", \"ζͱ\", \"ρ\", \"σ\", \"τ\", \"ου\", \"ψ\", \"κ\",\n            \"γ\", \"κͱ\", \"σͱ\", \"τσ\", \"τσ\", \"δζ\", \"τσ\", \"τσͱ\", \"γχ\", \"τζ\", \"ͱ\",\n            \"ε\", \"ι\", \"υι\", \"κχ\", \"ͱοι\",\n            \"φ\", \"οα\", \"ͱ\", \"γ\", \"ργ\",\n            \"\", \"\", \"οα\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\",\n        ],\n\n        // Georgian alphabet armenianization \n        armenian: [\n            \"ա\", \"բ\", \"գ\", \"դ\", \"է\", \"վ\", \"զ\", \"թ\", \"ի\", \"կ\", \"լ\",\n            \"մ\", \"ն\", \"օ\", \"պ\", \"ժ\", \"ռ\", \"ս\", \"տ\", \"ու\", \"փ\", \"ք\",\n            \"ղ\", \"կհ\", \"շ\", \"չ\", \"ց\", \"ձ\", \"ծ\", \"ճ\", \"խ\", \"ջ\", \"հ\",\n            \"է\", \"ի\", \"ուի\", \"խ\", \"հօի\",\n            \"ֆ\", \"ը\", \"հ\", \"ղ\", \"ռղ\",\n            \"\", \"\", \"ը\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\",\n        ],\n\n        // International Standards Organization (http://www.iso.ch) as shown in Apridonidze et al. and UNGEGN\n        iso_9984: [\n            \"a\", \"b\", \"g\", \"d\", \"e\", \"v\", \"z\", \"t'\", \"i\", \"k\", \"l\",\n            \"m\", \"n\", \"o\", \"p\", \"ž\", \"r\", \"s\", \"t\", \"u\", \"p'\", \"k'\",\n            \"ḡ\", \"q\", \"š\", \"č'\", \"c'\", \"j\", \"c\", \"č\", \"x\", \"ǰ\", \"h\",\n            \"ē\", \"y\", \"w\", \"ẖ'\", \"ō\",\n            \"f\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\",\n        ],\n\n        //  The national system of romanization adopted in February 2002 by the State Department of Geodesy and Cartography of Georgia and the Institute of Linguistics, Georgian Academy of Sciences\n        national: [\n            \"a\", \"b\", \"g\", \"d\", \"e\", \"v\", \"z\", \"t\", \"i\", \"k'\", \"l\",\n            \"m\", \"n\", \"o\", \"p'\", \"zh\", \"r\", \"s\", \"t'\", \"u\", \"p\", \"k\",\n            \"gh\", \"q'\", \"sh\", \"ch\", \"ts\", \"dz\", \"ts'\", \"ch'\", \"kh\", \"j\", \"h\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\",\n        ],\n\n        // Iberiul-K’avk’asiuri enatmetsnierebis ts’elits’deuli [Annual of Ibero-Caucasian Linguistics] as shown in The World’s Writing Systems. Variant forms separated with a slash\n        // ike : [],\n\n        // American Library Association/Library of Congress.\n        // ala_lc : [],\n\n\n        // Kohanimeandmebaas (Place Names Database) of Eesti Keele Instituut (Institute of the Estonian Language) (http://www.eki.ee).\n        // knab : [],\n\n        // United States Board on Geographic Names and the Permanent Committee on Geographical Names for British Official Use\n        bgn: [\n            \"a\", \"b\", \"g\", \"d\", \"e\", \"v\", \"z\", \"t'\", \"i\", \"k\", \"l\",\n            \"m\", \"n\", \"o\", \"p\", \"zh\", \"r\", \"s\", \"t\", \"u\", \"p'\", \"k'\",\n            \"gh\", \"q\", \"sh\", \"ch'\", \"ts'\", \"dz\", \"ts\", \"ch\", \"kh\", \"j\", \"h\",\n            \"ey\", \"j\", \"\", \"q'\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\",\n        ],\n\n        // Thesaurus Indogermanischer Text- und Sprachmaterialien (http://titus.uni-frankfurt.de)\n        titus : [\n            \"a\", \"b\", \"g\", \"d\", \"e\", \"v\", \"z\", \"t\", \"i\", \"ḳ\", \"l\", \n            \"m\", \"n\", \"o\", \"ṗ\", \"ž\", \"r\", \"s\", \"ṭ\", \"u\", \"p\", \"k\", \n            \"ġ\", \"q̇\", \"š\", \"č\", \"c\", \"ӡ\", \"c̣\", \"č̣\", \"x\", \"ǯ\", \"h\", \n            \"ē\", \"y\", \"w\", \"q\", \"ō\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\",     \n        ],\n\n        // Latin to Georgian QWERTY keyboard mapping used for older fonts\n        qwerty: [\n            \"a\", \"b\", \"g\", \"d\", \"e\", \"v\", \"z\", \"T\", \"i\", \"k\", \"l\",\n            \"m\", \"n\", \"o\", \"p\", \"J\", \"r\", \"s\", \"t\", \"u\", \"f\", \"q\",\n            \"R\", \"y\", \"S\", \"C\", \"c\", \"Z\", \"w\", \"W\", \"x\", \"j\", \"h\",\n            \"E\", \"I\", \"V\", \"X\", \"H\",\n            \"F\", \"D\", \"Y\", \"G\", \"L\",\n            \">\", \"N\", \"<\", \"{\", \"}\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\",\n        ],\n\n        // Numeric values\n        numeric: [\n            \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"9\", \"10\", \"20\", \"30\",\n            \"40\", \"50\", \"70\", \"80\", \"90\", \"100\", \"200\", \"300\", \"400\", \"500\", \"600\",\n            \"700\", \"800\", \"900\", \"1000\", \"2000\", \"3000\", \"4000\", \"5000\", \"6000\", \"8000\", \"9000\",\n            \"8\", \"60\", \"400\", \"7000\", \"10000\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\", \"\", \"\",\n            \"\", \"\", \"\",\n        ],\n\n        // See also http://transliteration.eki.ee/pdf/Georgian.pdf\n    },\n\n    start: {\n        mkhedruli: 4304,\n        mtavruli: 7312,\n        asomtavruli: 4256,\n        nuskhuri: 11520,\n        latin: 97\n    },\n\n    regex: {\n        mkhedruli: /[ა-ჿ]/,\n        mtavruli: /[Ა-Ჿ]/,\n        asomtavruli: /[Ⴀ-Ⴥ]/,\n        nuskhuri: /[ⴀ-ⴥ]/,\n        latin: /[a-zA-Z]/,\n        cyrillic: /[А-Яа-я]/\n    }\n\n}\n","import data from \"./data.mjs\";\n\nexport const checkForAliases = (dir) => {\n    var aliases = {\n        მხედრული: \"mkhedruli\",\n        ასომთავრული: \"asomtavruli\",\n        ნუსხური: \"nuskhuri\",\n        მთავრული: \"mtavruli\",\n        ხუცური: \"khutsuri\",\n        შანიძისეული: \"shanidziseuli\",\n        ტფილელისეული: \"tfileliseuli\",\n        \"ანბანის მთავრული\": \"anbanismtavruli\",\n        ჰომოგლიფი: \"homoglyph\",\n        ფონეტიკური: \"phonetic\",\n        ლათინური: \"qwerty\",\n        კირილიცა: \"cyrillic\",\n        ბერძნული: \"greek\",\n        სომხური: \"armenian\",\n        ნაციონალური: \"national\",\n        ქვერთი: \"qwerty\",\n        ზოგადი: \"common\",\n        ტრანსკრიფცია: \"common\",\n        ისო: \"iso_9984\",\n        ბგნ: \"bgn\",\n    };\n\n    Object.keys(aliases).forEach(function (key) {\n        if (key == dir.from) {\n            dir.from = aliases[key];\n        }\n        if (key == dir.to) {\n            dir.to = aliases[key];\n        }\n    });\n};\n\nexport const checkForDirection = (dir) => {\n    let permitted_from = [\n        \"mkhedruli\",\n        \"asomtavruli\",\n        \"nuskhuri\",\n        \"mtavruli\",\n        \"qwerty\",\n    ];\n    let permitted_to = [\n        //    everything is permitted\n    ];\n    if (permitted_from.indexOf(dir.from) == -1)\n        throw `Text conversion from '${dir.from}' is not supported.`;\n    // if (permitted_to.indexOf(dir.to) == -1)\n    //     throw `Text conversion to '${dir.to}' is not supported.`;\n};\n\nexport const isUnsupported = (str) => {\n    return [data.regex.cyrillic.test(str)].some(\n        (testResult) => testResult == true\n    );\n};\n\nexport const isBicameral = (to) => {\n    return to == \"tfileliseuli\" || to == \"shanidziseuli\" || to == \"khutsuri\" || to == \"anbanismtavruli\";\n};\n\nString.prototype.setCharAt = function (where, what, offset) {\n    offset = offset || 0;\n    if (where > this.length - 1) return this;\n    return (\n        this.substring(0, where) + what + this.substring(where + what.length + offset)\n    );\n};\n\nexport const toUpperCase = (word, from, to) => {\n    let char = data.alphabets[to][data.alphabets[from].indexOf(word[0])];\n    char = char == undefined ? word[0] : char;\n    return word.setCharAt(0, char);\n};\n\nexport const detectAlphabet = (str, idx) => {\n    if (idx < 0)\n        return \"qwerty\"\n    if (data.regex.mkhedruli.test(str[idx]))\n        return \"mkhedruli\";\n    if (data.regex.latin.test(str[idx]))\n        return \"qwerty\";\n    if (data.regex.asomtavruli.test(str[idx]))\n        return \"asomtavruli\";\n    if (data.regex.mtavruli.test(str[idx]))\n        return \"mtavruli\";\n    if (data.regex.nuskhuri.test(str[idx]))\n        return \"nuskhuri\";\n    return detectAlphabet(str, idx - 1);\n};\n\nexport const classifyText = (str) => {\n    /* MATCHES ALPHABETS [Mkhedruli, Mtavruli, Asomtavruli, Nuskhuri, Latin, Cyrillic] */\n    let vector = [\n        data.regex.mkhedruli.test(str),\n        data.regex.mtavruli.test(str),\n        data.regex.asomtavruli.test(str),\n        data.regex.nuskhuri.test(str),\n        data.regex.latin.test(str),\n        data.regex.cyrillic.test(str),\n    ];\n\n    // Georgian alphabets\n    if (isSame(vector, [true, false, false, false, false, false]))\n        return \"mkhedruli\";\n\n    if (isSame(vector, [false, true, false, false, false, false]))\n        return \"mtavruli\";\n\n    if (isSame(vector, [false, false, true, false, false, false]))\n        return \"asomtavruli\";\n\n    if (isSame(vector, [false, false, false, true, false, false]))\n        return \"nuskhuri\";\n\n    // Georgian bicameral writings\n    if (isSame(vector, [true, true, false, false, false, false]))\n        return \"tfileliseuli\";\n\n    if (isSame(vector, [true, false, true, false, false, false]))\n        return \"shanidziseuli\";\n\n    if (isSame(vector, [false, false, true, true, false, false]))\n        return \"khutsuri\";\n\n    if (isSame(vector, [false, true, true, false, false, false]))\n        return \"anbanismtavruli\";\n\n    // Non-Georgian alphabets\n    if (isSame(vector, [false, false, false, false, true, false]))\n        return \"latin\";\n\n    if (isSame(vector, [false, false, false, false, false, true]))\n        return \"cyrillic\";\n\n    return vector;\n};\n\n// Char Code At\nexport const cca = (char) => char.charCodeAt(0);\n\n// From Char Code\nexport const fcc = (code) => String.fromCharCode(code);\n\n// same length [Boolean] equals\nexport const isSame = (b1, b2) => {\n    for (let i = 0, len = b1.length; i < len; i++) {\n        if (b1[i] != b2[i]) return false;\n    }\n    return true;\n};\n\nexport default { checkForAliases, checkForDirection, isUnsupported, isBicameral, toUpperCase, detectAlphabet, classifyText, cca, fcc, isSame };\n","const data = {}\n\n\n/* Frequencies for (for Vefxistyaosani)\n- words - 40989\n- dot - 1878\n- comma - 8479\n- exclamation - 588\n- question - 286\n*/\ndata.frequency = {\n    general : {\n        '.' : 0.0458171705,\n        ',' : 0.206860377,\n        '!' : 0.0143453122,\n        '?': 0.00697748176,\n    },\n\n    summed : [\n        ['?', 0.00697748176],\n        ['!', 0.02132279396],\n        ['.', 0.06713996445],\n        [',', 0.27400034145]\n    ]\n}\n\n\n// 100 random words generated using char-rnn \ndata.vefxwords = [\n    'გამიშვშეს',\n    'მართალიპი',\n    'შემომოცივე',\n    'ვუხვა',\n    'გავლსობა',\n    'განდევანგაა',\n    'მოასეხეს',\n    'აქამდსაგებენ',\n    'შვენინე',\n    'უგანდეგო',\n    'ქანულკულნი',\n    'გემრუფენ',\n    'ვეღათ',\n    'მივისცა',\n    'მუკამდის',\n    'მივიმოწუქალსა',\n    'მზლოს',\n    'მოვლეხვე',\n    'ვიმაქებდა',\n    'ტატრესტინი',\n    'მოითქოკა',\n    'მდაგებენ',\n    'ვიმცე',\n    'სევა',\n    'სათინესნი',\n    'სადგმო',\n    'გასჩვადეთ',\n    'მესმანცა',\n    'მივსცავე',\n    'წეითო',\n    'ძვილნი',\n    'გამიზრიან',\n    'დავათქვენო',\n    'ზიცი',\n    'მისცედი',\n    'მონებანი',\n    'დანამრისა',\n    'სრცოტი',\n    'ჰქონთავისთან',\n    'მბრძენია',\n    'წახსილთა',\n    'მიხსენით',\n    'სევნა',\n    'გარდუკვრიდდა',\n    'მიდამოდეს',\n    'სიპყრო',\n    'შემწოვლისა',\n    'მამდიჰხლეან',\n    'ბრჭნია',\n    'დანენატანნი',\n    'უკრთებოდემნი',\n    'იციცოდა',\n    'სამატა',\n    'უფრნა',\n    'გაეგარნების',\n    'დავეჯარენა',\n    'მტემურსა',\n    'მშვენოდენო',\n    'გიმძიმნო',\n    'სამვზინო',\n    'მოვლოცთა',\n    'გიშვილა',\n    'დაამჭებინ',\n    'მითხროს',\n    'მჟავალია',\n    'მღურა',\n    'ღინდეს',\n    'მოაგხება',\n    'გავიცეცხლი',\n    'ტირსლით',\n    'გავწყრეტა',\n    'მყივნენ',\n    'ქაფინს',\n    'ბანგსა',\n    'შემოხანა',\n    'შემოვსჭვრეტით',\n    'ამოვჰღერთო',\n    'მოცადია',\n    'მოეხვიდეს',\n    'თქმია',\n    'აღვია',\n    'ვლამს',\n    'მოხდიანები',\n    'გორსვლითა',\n    'გვთქვას',\n    'გაუზადა',\n    'დაბითქის',\n    'ანვინა',\n    'შრიდონი',\n    'გავწიდნია',\n    'ალვითანი',\n    'მონიო',\n    'სიტირენ',\n    'გიშიხარნი',\n    'დამიფემი',\n    'მეგრეცა',\n    'ფითჯი',\n    'მსდევარსა',\n    'განაზანდა',\n    'საქმინ',\n]\n\ndata.fnames = [\n    'თავან',\n    'ელიკონ',\n    'კანტლიონ',\n    'გველე',\n    'ლადიან',\n    'ლოტინე',\n    'გიოლგვი',\n    'გარსა',\n    'თედა',\n    'მეზნან',\n    'მარტა',\n    'აურაზგრ',\n    'მადრა',\n    'გიოგილი',\n    'სონიკელიზანი',\n    'ასსანო',\n    'ნიგოლიტი',\n    'ავაკვან',\n    'მონს',\n    'ნადრინ',\n    'ნიფოლ',\n    'ელიკორ',\n    'დამას',\n    'გიმრი',\n    'ობარხი',\n    'გამონ',\n    'ონეს',\n    'ზიხტინე',\n    'იოკელ',\n    'სატდა',\n    'პარა',\n    'იანეზ',\n    'ზინა',\n    'რანგი',\n    'იანგორ',\n    'აბსინე',\n    'ლენტან',\n    'ზისტიკობ',\n    'ნიგოლო',\n    'დატითნი',\n    'მანთა',\n    'არგიქ',\n    'ზიკო',\n    'ერლე',\n    'იანე',\n    'მევრენ',\n    'ალტისა',\n    'მარდია',\n    'სისელ',\n    'ხეისა',\n    'ელუან',\n    'დელო',\n    'იეკლებ',\n    'გუჩილი',\n    'ტამა',\n    'ნოკგოლ',\n    'იაკისე',\n    'დადო',\n    'ართემრას',\n    'ანაიკობე',\n    'გტიტ',\n    'თახსან',\n    'ზანა',\n    'ნუდო',\n    'გიოდა',\n    'ისსლიკონ',\n    'ალსან',\n    'რამოლე',\n    'გუმან',\n    'ნურმგინ',\n    'თომითანი',\n    'დევანე',\n    'ელედეინ',\n    'გიმოტ',\n    'არარ',\n    'ორმონ',\n    'ნედრი',\n    'დიმო',\n    'ხოთიანეი',\n    'გივა',\n    'ნანტრე',\n    'გიმოლ',\n    'დოსონ',\n    'იკანენ',\n    'იკქორიზე',\n    'გილტორგ',\n    'დეტონ',\n    'ერდეა',\n    'ირეგლიზ',\n    'რიდელუდან',\n    'თოკან',\n    'იანებენტიანა',\n    'სიბო',\n    'გიორტინ',\n    'ნიკილან',\n    'ელაკონ',\n    'გიდრაბ',\n    'ლეცთეტანტენდერიბ',\n    'დამერ',\n    'იეგო',\n]\n\ndata.lnames = [\n    'მახადენია',\n    'ბსელრია',\n    'ქავია',\n    'კორეკია',\n    'მარდია',\n    'ბარდიონია',\n    'გვიპიანდია',\n    'ერთელია',\n    'ნთხაია',\n    'თედია',\n    'ბოხაია',\n    'ბარია',\n    'ჭარტინია',\n    'არპანია',\n    'ჩურია',\n    'მორცაწაზია',\n    'არმელია',\n    'მირბარია',\n    'ჭველაქია',\n    'ქარითია',\n    'გართელია',\n    'იანია',\n    'დვანტონეიანია',\n    'პუჩია',\n    'დატილია',\n    'კანია',\n    'ვარდსვალია',\n    'ყორთელია',\n    'არდოლია',\n    'რიკსქაშვილი',\n    'გამექონთეშვილი',\n    'ლუჩაშვილი',\n    'მარდაშვილი',\n    'პაბიშვილი',\n    'არბერეშვილი',\n    'ფოსურიშვილი',\n    'ვაწოშვილი',\n    'ჩრილიაშვილი',\n    'ტიმაშვილი',\n    'მავანიშვილი',\n    'მადსიშვილი',\n    'რედელიშვილი',\n    'თეთაშვილი',\n    'გარავაშვილი',\n    'დარახაშვილი',\n    'ბარჭამიშვილი',\n    'ბარახაშვილი',\n    'ანღელიშვილი',\n    'მებაშვილი',\n    'სურეჯიშვილი',\n    'აკბთაკიშვილი',\n    'ტუსონიშვილი',\n    'ტოდერაშვილი',\n    'ზაბხასიშვილი',\n    'ქურაბერინიშვილი',\n    'ებვეკაშვილი',\n    'ერდითაშვილი',\n    'ურბელიშვილი',\n    'მენრმაშვილი',\n    'ჯვილოძე',\n    'ბადიაძე',\n    'შვირიძე',\n    'სასანაძე',\n    'გიმაანიძე',\n    'გვამავიძე',\n    'არმემიძსძე',\n    'ბარაძე',\n    'აბეანიძე',\n    'ოვონიძე',\n    'ლამაშვიძე',\n    'ობთახურაძე',\n    'კერეძე',\n    'ფვერიძე',\n    'მაგიძე',\n    'კადიაშიძე',\n    'გამსანიძე',\n    'მერტინიძე',\n    'ბემეელიძე',\n    'ტოხიძე',\n    'ჭარატიძე',\n    'ბადოსელი',\n    'ვარისელი',\n    'სირხელი',\n    'სორხელი',\n    'მარდელი',\n    'გაშვითელი',\n    'კოთაველი',\n    'ოსთმინელი',\n    'ერისელი',\n    'ზთერტელი',\n    'ხამიკელი',\n    'მიბაძეშიელი',\n    'იკთელი',\n    'გთციტაბელი',\n    'ასიცელი',\n    'ობაიჭელი',\n    'ლენთელი',\n    'მემჩათერინონგბანინიძე',\n    'ამედვაქსიკოგეიშვირი',\n    'მორჟვონანდიშვილი',\n]\n\nlet dataset = data.vefxwords\nconst freqs = data.frequency.summed\n\nconst loadWordlist = (wordlist) => \n{\n    dataset = wordlist\n}\n\nconst sentences = (nwords) => {\n    return createSentences(createWords(nwords))\n} \n\nconst paragraphs = (nwords, npar, newline=\"\\n\\n\") => {\n    let paragraphs = \"\"\n\n    for (let i=0; i < npar; i++){\n        paragraphs += createSentences(createWords(nwords)) + newline\n    }\n\n    return paragraphs\n}\n\nconst createSentences = (words) => {\n    let sentences = \"\"\n    \n    for (let i=0; i < words.length; i++){\n        sentences += words[i] + randomMark()\n    }\n    sentences = sentences.trim()\n    sentences = sentences.setCharAt(sentences.length-1, '.', 1)   \n    return sentences\n}\n\n\nconst names = (nnames) => {\n    let results = []\n    for (let i = 0; i < nnames; i++) {\n        results.push(randomFirstName() + ' ' + randomLastName())\n    }\n    return results\n}\n\nconst randomFirstName = () => {\n    return data.fnames[randomNumber(0, data.fnames.length)]\n}\n\nconst randomLastName = () => {\n    return data.lnames[randomNumber(0, data.lnames.length)]\n}\n\n\nString.prototype.setCharAt = function(where, what, offset) \n{\n    offset = offset || 0;\n    if(where > this.length-1) return this;\n    return this.substring(0,where) + what + this.substring(where+what.length+offset);\n}\n\nconst randomMark = () => {\n    let r = Math.random()\n    for (let i=0; i<freqs.length; i++) {\n        if (r < freqs[i][1])\n            return freqs[i][0] + ' '\n    }\n    return ' '\n}\n\nconst randomWord = () => {\n    return dataset[randomNumber(0,dataset.length)]\n}\n\nconst createWords = (nwords) => {\n    let words = []\n    for (let i=0; i < nwords; i++){\n        words.push(randomWord())\n    }\n    return words\n\n}\n\n// Random number [min, max)\nconst randomNumber = (min, max) => {\n    return Math.floor(Math.random() * (max-min) + min)\n}\n\nconst $ = { randomFirstName, randomLastName, randomWord };\n\nexport default {\n    sentences, paragraphs, loadWordlist, names, $\n};\n","const frequency = (text, miss=\"[ა-ჰᲐ-ᲰႠ-Ⴠⴀ-ⴠa-zA-ZА-Яа-я]\") => {\n    let splitted = text.toUpperCase().split('')\n    let length = splitted.length\n    let table = {}\n    let r = new RegExp(miss)\n    for (let i=0; i < length; i++) {\n        if (!r.test(splitted[i]))\n            continue\n        if (!table[splitted[i]])\n            table[splitted[i]] = 1\n        else \n            table[splitted[i]]++\n    }\n\n    for(let key in table) {\n        table[key] /= length\n    }\n\n    return table\n}\n\nconst count = (text, miss=\"[ა-ჰᲐ-ᲰႠ-Ⴠⴀ-ⴠa-zA-ZА-Яа-я]\") => {\n    let splitted = text.toUpperCase().split('')\n    let length = splitted.length\n    let table = {}\n    let r = new RegExp(miss)\n    for (let i=0; i < length; i++) {\n        if (!r.test(splitted[i]))\n            continue\n        if (!table[splitted[i]])\n            table[splitted[i]] = 1\n        else \n            table[splitted[i]]++\n    }\n\n    return table\n}\n\nconst friedman = (text, miss=\"[ა-ჰᲐ-ᲰႠ-Ⴠⴀ-ⴠa-zA-ZА-Яа-я]\") => {\n    let table = count(text, miss)\n    let sum = 0\n    let total = 0\n    for (let key in table){\n        sum += table[key] * (table[key] - 1)\n        total += table[key]\n    }\n    return total > 1 ? sum / (total*(total-1)) : 0\n}\n\n\nexport default {friedman, frequency, count};"],"names":["$e73bf42412feb220$var$inputArea","$e73bf42412feb220$var$debugEl","$d1f00b498fd37dc9$export$2e2bcd8739ae039","alphabets","names","mkhedruli","mtavruli","asomtavruli","nuskhuri","homoglyph","phonetic","common","cyrillic","greek","armenian","iso_9984","national","bgn","titus","qwerty","numeric","start","latin","regex","$73643bc0a02e5d79$export$b90e0603966ac6a0","dir","aliases","Object","keys","forEach","key","from","to","$73643bc0a02e5d79$export$b0f773ea32aeb296","permitted_from","indexOf","$73643bc0a02e5d79$export$40b880626ad803ac","String","prototype","setCharAt","where","what","offset","length","substring","$73643bc0a02e5d79$export$d80c591a9e16646","word","char","undefined","$73643bc0a02e5d79$export$6ee99fcdec9a113e","str","idx","test","$73643bc0a02e5d79$export$a43a4096c689c3b0","vector","$73643bc0a02e5d79$export$18ac18efd9e98d41","b1","b2","i","len","$73643bc0a02e5d79$export$2e2bcd8739ae039","checkForAliases","checkForDirection","isUnsupported","some","testResult","isBicameral","toUpperCase","detectAlphabet","classifyText","cca","charCodeAt","fcc","code","fromCharCode","isSame","$821ec095051e6a95$export$baad8515b31b26e5","converted","$821ec095051e6a95$export$17d8eddb2796154a","rules","upper","lower","upperScript","lowerScript","matched","match","concat","$821ec095051e6a95$export$2187bb99d29a0da7","$821ec095051e6a95$export$2e2bcd8739ae039","convert","interpret","$","$d90013e23dc65086$var$data","frequency","general","summed","vefxwords","fnames","lnames","$d90013e23dc65086$var$dataset","$d90013e23dc65086$var$freqs","$d90013e23dc65086$var$createSentences","words","sentences","$d90013e23dc65086$var$randomMark","trim","$d90013e23dc65086$var$randomFirstName","$d90013e23dc65086$var$randomNumber","$d90013e23dc65086$var$randomLastName","r","Math","random","$d90013e23dc65086$var$randomWord","$d90013e23dc65086$var$createWords","nwords","push","min","max","floor","$a0e4f0024471c2bc$var$count","text","miss","splitted","split","table","RegExp","$1a281e31534456e0$var$scripts","slice","$1a281e31534456e0$export$555508cbc6add439","letters","join","caps","bicam","bicaps","$1a281e31534456e0$export$2e2bcd8739ae039","core","lorem","paragraphs","npar","newline","loadWordlist","wordlist","nnames","results","randomFirstName","randomLastName","randomWord","toolkit","friedman","sum","total","count","data","utils","ab","$e73bf42412feb220$var$inputListener","inputText","value","scripts","georgian","script","document","querySelector","innerHTML","$e73bf42412feb220$var$copy","e","msg","navigator","clipboard","$e73bf42412feb220$var$copyWithExec","content","target","area","createElement","body","appendChild","select","execCommand","removeChild","toElement","template","html","firstChild","window","addEventListener","event","copy","anbani"],"version":3,"file":"index.f9c235b7.js.map"}